{"mappings":"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","sources":["main.js"],"sourcesContent":["//watch the free video on how this demo was made\r\n// https://www.snorkl.tv/scrolltrigger-smooth-scroll/\r\n\r\nconst pageContainer = document.querySelector(\".scrollContainer\");\r\n\r\nconst locoScroll = new LocomotiveScroll({\r\n\tel: document.querySelector(\".scrollContainer\"),\r\n\tsmooth: true,\r\n    inertia: 0.8,    \r\n    getDirection: true,\r\n    mobile: {\r\n      breakpoint: 0,\r\n      smooth: true,\r\n      getDirection: true,\r\n    },\r\n    tablet: {\r\n      breakpoint: 0,\r\n      smooth: true,\r\n      getDirection: true,\r\n    },\r\n  });\r\n\r\n\r\n// const locoScroll = new LocomotiveScroll({\r\n// \tel: document.querySelector(\".scrollContainer\"),\r\n// \tsmooth: true\r\n// });\r\n\r\n\r\n\r\n\r\n// each time Locomotive Scroll updates, tell ScrollTrigger to update too (sync positioning)\r\n\r\n\r\n\r\nlocoScroll.on(\"scroll\", ScrollTrigger.update);\r\n\r\n// tell ScrollTrigger to use these proxy methods for the \".smooth-scroll\" element since Locomotive Scroll is hijacking things\r\nScrollTrigger.scrollerProxy(\".scrollContainer\", {\r\n\tscrollTop(value) {\r\n\t\treturn arguments.length ? locoScroll.scrollTo(value, 0, 0) : locoScroll.scroll.instance.scroll.y;\r\n\t}, // we don't have to define a scrollLeft because we're only scrolling vertically.\r\n\tgetBoundingClientRect() {\r\n\t\treturn { top: 0, left: 0, width: window.innerWidth, height: window.innerHeight };\r\n\t},\r\n\t// LocomotiveScroll handles things completely differently on mobile devices - it doesn't even transform the container at all! So to get the correct behavior and avoid jitters, we should pin things with position: fixed on mobile. We sense it by checking to see if there's a transform applied to the container (the LocomotiveScroll-controlled element).\r\n\tpinType: document.querySelector(\".scrollContainer\").style.transform ? \"transform\" : \"fixed\"\r\n});\r\n\r\n\r\n//gsap\r\n// gsap.to('.htanim', {opacity:1, duration:1, y:-50, ease:'Power2.easeInOut', stagger: .2})\r\n// gsap.to('.herowrk', {delay: .6, opacity:1, duration:2, y:-20, ease:'Power2.easeInOut'})\r\n// gsap.fromTo('.imgg', {opacity:0, duration:4, x:150, ease:'Power2.easeInOut'}, {delay: .5, opacity:1, duration:2, x:-80, ease:'Power2.easeInOut'})\r\n// gsap.fromTo('.header', {opacity:0, duration:0, y:-20, ease:'Power2.easeInOut'}, {delay: 1, opacity:1, duration:1, y:0, ease:'Power2.easeInOut'})\r\n\r\nvar tl = gsap.timeline({ defaults: { duration: 1 } })\r\n\r\ntl.to(\".htanim\", { opacity: 1, y: -50, ease: 'Power2.easeInOut', stagger: .2 })\r\n\t.to(\".herowrk\", { opacity: 1, y: -20, ease: 'Power2.easeInOut' }, \"-=.5\")\r\n\t.fromTo(\".imgg\", { opacity: 0, x: 150, ease: 'Power2.easeInOut' }, { opacity: 1, x: -74, ease: \"Expo.easeOut\" }, \"-=.5\")\r\n\t.fromTo(\".imggg\", { opacity: 0, x: 150, ease: 'Power2.easeInOut' }, { opacity: 1, x: -14, ease: \"Expo.easeOut\" }, \"-=.5\")\r\n\t.fromTo(\".header\", { opacity: 0, y: -20, ease: 'Power5' }, { opacity: 1, y: 0, ease: 'Power5' }, \"-=1.4\")\r\n\r\n\r\n\r\n//Scrolltrigger with loco with gsap\r\n\r\nlet wrtl = gsap.timeline({defaults: {}})\r\n\t.fromTo(\".worktitle, .char\", {y:-50, opacity: 0, duration: 1}, {y:0, opacity: 1, ease: \"Power1.easeInOut\"})\r\n\t.fromTo(\".word\", {y:-50, opacity: 0, duration: 1}, {y:0, opacity: 1, ease: \"slow.easeOut\", stagger: 0.050},\"-=1\")\r\n\t.fromTo(\".tools\", {y:-50, opacity: 0, duration: 1}, {y:0, opacity: 1, ease: \"slow.easeOut\", stagger: 0.050},\"-=1\")\r\n\t.fromTo(\".icons\", {y:150, opacity: 0, duration: 1}, {y:0, opacity: 1, ease: \"slow.easeOut\", stagger: 0.050},\"-=.5\")\r\n\t\r\n\t\r\n\r\n\r\nScrollTrigger.create( {\r\n\ttrigger: '.worktitle, .word, .tools, .icons, .madetools',\r\n\tstart: \"top bottom\",\r\n\tend: \"+=300\",\r\n\tscroller: \".scrollContainer\",\r\n\tanimation:wrtl\r\n\r\n})\r\n\r\nlet prtl = gsap.timeline({defaults: {}})\r\n\t.fromTo(\".madetools\", {y:150, opacity: 0, duration: 1}, {y:0, opacity: 1, ease: \"slow.easeOut\", stagger: 0.050},\"1\")\t\r\n\t// .fromTo(\".proimg\", { opacity: 0, duration: 1}, {opacity: 1, ease: \"slow.easeOut\"},\"1\")\r\n\t.to(\".proimg\", {opacity: 1, duration: 1})\r\n\r\n\r\nScrollTrigger.create( {\r\n\ttrigger: '.madetools, .proimg',\r\n\tstart: \"top bottom\",\r\n\tend: \"+=300\",\r\n\tscroller: \".scrollContainer\",\r\n\tanimation:prtl\r\n\r\n})\r\n\r\nlet wrkendtl = gsap.timeline({defaults: {}})\r\n\t.fromTo(\"body, header\", {backgroundColor:\"#861F3E\"}, {backgroundColor:\"#17171F\", ease: \"Power2.easeInOut\"})\t\r\n\t// .fromTo(\".proslider\", {y:500, duration: 1}, {y:0 , ease: \"slow.easeOut\"})\t\r\n\t// .fromTo(\".proimg\", { opacity: 0, duration: 1}, {opacity: 1, ease: \"slow.easeOut\"},\"1\")\r\n\t\r\n\r\n\r\nScrollTrigger.create( {\r\n\ttrigger: '.workflow',\r\n\tstart: \"center top\",\r\n\tend: \"+=300\",\r\n\ttoggleActions: \"restart pause play reverse\",\r\n\tscroller: \".scrollContainer\",\r\n\tanimation:wrkendtl\r\n\r\n})\r\n\r\n\r\nlet wrkendftl = gsap.timeline({defaults: {}})\r\n\t// .fromTo(\"body\", {backgroundColor:\"#861F3E\", duration: 1}, {backgroundColor:\"#17171F\", ease: \"Expo.easeOut\"})\t\r\n\t// .fromTo(\"body\", {backgroundColor:\"#861F3E\", duration: 1}, {backgroundColor:\"#17171F\", ease: \"slow.easeOut\"})\t\r\n\t.fromTo(\".pin-wrap\", {y:-180, opacity: 0 }, {y:0, opacity: 1, duration: 5, ease: \"slow.easeInOut\"})\t\r\n\t// .fromTo(\".proimg\", { opacity: 0, duration: 1}, {opacity: 1, ease: \"slow.easeOut\"},\"1\")\r\n\t// .fromTo(\"body\", {backgroundColor:\"#861F3E\", duration: 1}, {backgroundColor:\"#17171F\", ease: \"Expo.easeOut\"})\r\n\r\n\r\nScrollTrigger.create( {\r\n\ttrigger: '.pin-wrap',\r\n\tstart: \"center top\",\r\n\ttoggleActions: \"restart play reverse\",\r\n\tend: \"+=300\",\r\n\t\r\n\t// scrub: 4,\r\n\tscroller: \".scrollContainer\",\r\n\tanimation:wrkendftl\r\n\r\n})\r\n\r\n\r\n\r\n// let wrkendbbftl = gsap.timeline({defaults: {}})\r\n// \t// .fromTo(\"body\", {backgroundColor:\"#861F3E\", duration: 1}, {backgroundColor:\"#17171F\", ease: \"Expo.easeOut\"})\t\r\n// \t// .fromTo(\"body\", {backgroundColor:\"#861F3E\", duration: 1}, {backgroundColor:\"#17171F\", ease: \"slow.easeOut\"})\t\r\n// \t.to(\".pin-wrap\", {y:-250, opacity: 0, duration: 5, ease: \"slow.easeInOut\"})\t\r\n// \t// .fromTo(\".proimg\", { opacity: 0, duration: 1}, {opacity: 1, ease: \"slow.easeOut\"},\"1\")\r\n// \t// .fromTo(\"body\", {backgroundColor:\"#861F3E\", duration: 1}, {backgroundColor:\"#17171F\", ease: \"Expo.easeOut\"})\r\n\r\n\r\n// ScrollTrigger.create( {\r\n// \ttrigger: '.expp',\r\n// \tstart: \"top bottom\",\r\n// \ttoggleActions: \"restart play reverse\",\r\n// \tend: \"+=300\",\r\n\t\r\n// \t// scrub: 4,\r\n// \tscroller: \".scrollContainer\",\r\n// \tanimation:wrkendbbftl\r\n\r\n// })\r\n\r\n// let prtll = gsap.timeline({defaults: {}})\t\r\n// \t.fromTo(\".pin-wrap\", {y:150, opacity: 0, duration: 1}, {y:0, opacity: 1, ease: \"slow.easeOut\", stagger: 0.050},\"1\")\r\n\t\r\n\r\n\r\n// ScrollTrigger.create( {\r\n// \ttrigger: '.pin-wrap',\r\n// \ttoggleActions: \"restart\",\t\r\n// \tscroller: \".scrollContainer\",\t\r\n// \tanimation:prtll\r\n\r\n// })\r\n\r\n// gsap.to(\".proslider\", {\r\n// \tscrollTrigger: {\r\n// \t  scroller: \".scrollContainer\",\r\n// \t  trigger: \".proslider\",\r\n// \t  toggleActions: \"restart\",\r\n// \t},\t\r\n// \tduration: 2\r\n// \t// x: -horizontalScrollLength,\r\n\t\r\n// });\r\n\r\n\r\n////////////////////////////////////\r\n////////////////////////////////////\r\nwindow.addEventListener(\"load\", function () {\r\n\tlet pinBoxes = document.querySelectorAll(\".pin-wrap > *\");\r\n\tlet pinWrap = document.querySelector(\".pin-wrap\");\r\n\tlet pinWrapWidth = pinWrap.offsetWidth;\r\n\tlet horizontalScrollLength = pinWrapWidth - window.innerWidth;\r\n  \r\n\t// Pinning and horizontal scrolling\r\n  \r\n\tgsap.to(\".pin-wrap\", {\r\n\t  scrollTrigger: {\r\n\t\tscroller: \".scrollContainer\", //locomotive-scroll\r\n\t\tscrub: true,\r\n\t\ttrigger: \"#sectionPin\",\r\n\t\tpin: true,\r\n\t\t// anticipatePin: 1,\r\n\t\tstart: \"top top\",\r\n\t\tend: pinWrapWidth\r\n\t  },\r\n\t  \r\n\t  duration: 1,\r\n\t  x: -horizontalScrollLength,\r\n\t  ease: \"none\"\r\n\t});\r\n  \r\n\t\r\n  \r\n\r\n\r\n//gsap\r\n\r\n// each time the window updates, we should refresh ScrollTrigger and then update LocomotiveScroll. \r\nScrollTrigger.addEventListener(\"refresh\", () => locoScroll.update());\r\n\r\n// after everything is set up, refresh() ScrollTrigger and update LocomotiveScroll because padding may have been added for pinning, etc.\r\nScrollTrigger.refresh();\r\n\r\n//watch the free video on how this demo was made\r\n// https://www.snorkl.tv/scrolltrigger-smooth-scroll/\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function updateList() {\r\n// \tconst titles = [...document.querySelectorAll('h1, h2')].sort((a, b) => {\r\n// \t\treturn Math.abs(a.getBoundingClientRect().top) - Math.abs(b.getBoundingClientRect().top);\r\n// \t});\r\n\r\n// \tdocument.querySelectorAll(\".selected-circle\").forEach(c => c.classList.remove(\"selected-circle\"));\r\n\r\n// \tdocument.querySelectorAll(\".nav-dot\")[[...document.querySelectorAll('h1, h2')].indexOf(titles[0])].classList.add(\"selected-circle\");\r\n// }\r\n\r\n// updateList();\r\n// window.addEventListener('scroll', () => {\r\n// \tupdateList();\t\r\n// })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["document","querySelector","$f976bf797198355a$var$locoScroll","LocomotiveScroll","el","smooth","inertia","getDirection","mobile","breakpoint","tablet","on","ScrollTrigger","update","scrollerProxy","scrollTop","value","arguments","length","scrollTo","scroll","instance","y","getBoundingClientRect","top","left","width","window","innerWidth","height","innerHeight","pinType","style","transform","gsap","timeline","defaults","duration","to","opacity","ease","stagger","fromTo","x","$f976bf797198355a$var$wrtl","create","trigger","start","end","scroller","animation","$f976bf797198355a$var$prtl","$f976bf797198355a$var$wrkendtl","backgroundColor","toggleActions","$f976bf797198355a$var$wrkendftl","addEventListener","querySelectorAll","pinWrapWidth","offsetWidth","horizontalScrollLength","scrollTrigger","scrub","pin","refresh"],"version":3,"file":"index.13b6c0f6.js.map"}