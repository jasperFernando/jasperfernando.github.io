{"mappings":"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","sources":["resume latest/jasperwebgl portfolio/node_modules/node_modules/babel-plugin-transform-async-to-promises/helpers.js","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/modules/Logger.ts","resume latest/jasperwebgl portfolio/node_modules/node_modules/path-to-regexp/index.js","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/schemas/attribute.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/utils/dom.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/utils/history.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/utils/helpers.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/utils/url.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/utils/request.ts","resume latest/jasperwebgl portfolio/node_modules/node_modules/is-promise/index.js","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/utils/run-async.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/hooks.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/defs/hooks.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/modules/Ignore.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/modules/Cache.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/modules/Prevent.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/modules/Error.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/modules/Store.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/modules/Transitions.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/modules/Views.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/polyfills/index.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/schemas/page.ts","resume latest/jasperwebgl portfolio/node_modules/@barba/core/src/core.ts","resume latest/jasperwebgl portfolio/projects.js"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","/**\n * @barba/core/modules/Logger\n * <br><br>\n * ## Logger.\n *\n * - Display informations via the console\n *\n * @module core/modules/Logger\n * @preferred\n */\n\n/***/\n\n/**\n * Log levels, all lower level messages are printed\n *\n * 0. mute\n * 1. error = `console.error()`\n * 2. warning= `console.warn()`\n * 3. info = `console.info()`\n * 4. debug = `console.log()`\n */\nexport enum LogLevels {\n  off = 0,\n  error = 1,\n  warning = 2,\n  info = 3,\n  debug = 4,\n}\n\n/**\n * Global log level\n */\nlet _level: number = LogLevels.off;\n\nexport class Logger {\n  /**\n   * Get global log level.\n   */\n  public static getLevel(): number {\n    return _level;\n  }\n\n  /**\n   * Set global log level.\n   */\n  public static setLevel(name: keyof typeof LogLevels): number {\n    _level = LogLevels[name];\n\n    return _level;\n  }\n\n  /**\n   * Log \"prefix\".\n   */\n  private _source: string;\n\n  /**\n   * Creates an instance of Logger.\n   */\n  constructor(source: string) {\n    this._source = source;\n  }\n\n  /**\n   * Permanent, unremovable log.\n   */\n  // public print(...objects: any[]): void {\n  //   this._log(console.info, LogLevels.off, objects);\n  // }\n\n  /**\n   * Error log.\n   */\n  public error(...objects: any[]): void {\n    this._log(console.error, LogLevels.error, objects);\n  }\n\n  /**\n   * Warn log.\n   */\n  public warn(...objects: any[]): void {\n    this._log(console.warn, LogLevels.warning, objects);\n  }\n\n  /**\n   * Info log.\n   */\n  public info(...objects: any[]): void {\n    this._log(console.info, LogLevels.info, objects);\n  }\n\n  /**\n   * Debug log.\n   */\n  public debug(...objects: any[]): void {\n    this._log(console.log, LogLevels.debug, objects);\n  }\n\n  /**\n   * Internal logger.\n   */\n  private _log(fn: () => void, level: number, objects: any[]): void {\n    if (level <= Logger.getLevel()) {\n      fn.apply(console, ([`[${this._source}] `].concat(objects) as unknown) as [\n\n      ]);\n    }\n  }\n}\n","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.match = match\nmodule.exports.regexpToFunction = regexpToFunction\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var whitelist = (options && options.whitelist) || undefined\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n      var c = path[k]\n      var matches = whitelist ? whitelist.indexOf(c) > -1 : true\n\n      if (matches) {\n        prev = c\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var pattern = capture || group\n    var delimiter = prev || defaultDelimiter\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: pattern\n        ? escapeGroup(pattern)\n        : '[^' + escapeString(delimiter === defaultDelimiter ? delimiter : (delimiter + defaultDelimiter)) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match (str, options) {\n  var keys = []\n  var re = pathToRegexp(str, keys, options)\n  return regexpToFunction(re, keys)\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction (re, keys) {\n  return function (pathname, options) {\n    var m = re.exec(pathname)\n    if (!m) return false\n\n    var path = m[0]\n    var index = m.index\n    var params = {}\n    var decode = (options && options.decode) || decodeURIComponent\n\n    for (var i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue\n\n      var key = keys[i - 1]\n\n      if (key.repeat) {\n        params[key.name] = m[i].split(key.delimiter).map(function (value) {\n          return decode(value, key)\n        })\n      } else {\n        params[key.name] = decode(m[i], key)\n      }\n    }\n\n    return { path: path, index: index, params: params }\n  }\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n    var validate = options ? options.validate !== false : true\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) continue\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = options.delimiter || DEFAULT_DELIMITER\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (!token.prefix) {\n          route += '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + escapeString(delimiter) + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    var endToken = tokens[tokens.length - 1]\n    var isEndDelimited = typeof endToken === 'string'\n      ? endToken[endToken.length - 1] === delimiter\n      : endToken === undefined\n\n    if (!strict) route += '(?:' + escapeString(delimiter) + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + escapeString(delimiter) + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/**\n * @barba/core/schemas\n * <br><br>\n * ## Schemas description.\n *\n * @module core/schemas\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { ISchemaAttribute } from '../defs';\n\n/**\n * See [[ISchemaAttribute]]\n */\nexport const schemaAttribute: ISchemaAttribute = {\n  container: 'container',\n  history: 'history',\n  namespace: 'namespace',\n  prefix: 'data-barba',\n  prevent: 'prevent',\n  wrapper: 'wrapper',\n};\n","/**\n * @barba/core/utils/dom\n * <br><br>\n * ## Dom utils\n *\n * - Access DOM contents\n * - DOM vs string conversions\n *\n * @module core/utils/dom\n * @preferred\n */\n\n/***/\n\nimport path from 'path';\n\n// Definitions\nimport { ISchemaAttribute, Link, Scope, Wrapper } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\nexport class Dom {\n  private _attr: ISchemaAttribute = schemaAttribute;\n  private _parser: DOMParser = new DOMParser();\n\n  /**\n   * Convert HTMLDocument to string.\n   */\n  public toString(el: HTMLElement): string {\n    return el.outerHTML;\n  }\n\n  /**\n   * Parse HTML string to HTMLDocument.\n   */\n  // see https://github.com/barbajs/barba/issues/362\n  // Seems that using DOMParser.parseFromString causes this issue.\n  public toDocument(htmlString: string): HTMLDocument {\n    return this._parser.parseFromString(htmlString, 'text/html');\n  }\n\n  /**\n   * Parse HTML string to DIVElement.\n   *\n   * DOMParser.parseFromString fails with img[srcset] on iOS.\n   * see https://github.com/barbajs/barba/issues/362\n   */\n  public toElement(htmlString: string): HTMLDivElement {\n    const div = document.createElement('div');\n\n    div.innerHTML = htmlString;\n    return div;\n  }\n\n  /**\n   * Get HTML content.\n   */\n  public getHtml(doc: HTMLDocument = document): string {\n    return this.toString(doc.documentElement);\n  }\n\n  /**\n   * Get full document content.\n   */\n  // getDocument(el = document.documentElement) {\n  //   return this.toStr(el);\n  // },\n\n  /**\n   * Get `[data-barba=\"wrapper\"]`.\n   */\n  public getWrapper(scope: Scope = document): Wrapper {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.wrapper}\"]`\n    );\n  }\n\n  /**\n   * Get `[data-barba=\"container\"]`.\n   */\n  public getContainer(scope: Scope = document): HTMLElement | null {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.container}\"]`\n    );\n  }\n\n  /**\n   * Remove container and store next sibling (if applicable).\n   */\n  public removeContainer(container: HTMLElement) {\n    if (document.body.contains(container)) {\n      container.parentNode.removeChild(container);\n    }\n  }\n\n  /**\n   * Add container before next sibling or at the end of the wrapper.\n   */\n  public addContainer(container: HTMLElement, wrapper: HTMLElement) {\n    const existingContainer = this.getContainer();\n\n    if (existingContainer) {\n      this._insertAfter(container, existingContainer);\n    } else {\n      wrapper.appendChild(container);\n    }\n  }\n\n  /**\n   * Get `[data-barba-namespace]`.\n   */\n  public getNamespace(scope: Scope = document): string | null {\n    const ns = scope.querySelector(\n      `[${this._attr.prefix}-${this._attr.namespace}]`\n    );\n\n    return ns\n      ? ns.getAttribute(`${this._attr.prefix}-${this._attr.namespace}`)\n      : null;\n  }\n\n  /**\n   * Get URL from `href` value.\n   */\n  public getHref(el: Link): string | null {\n    // HTML tagName is UPPERCASE, xhtml tagName keeps existing case.\n    if (el.tagName && el.tagName.toLowerCase() === 'a') {\n      // HTMLAnchorElement, full URL available\n      if (typeof el.href === 'string') {\n        return el.href;\n      }\n\n      // Probably a SVGAElement…\n      const href = el.getAttribute('href') || el.getAttribute('xlink:href');\n\n      /* istanbul ignore else */\n      if (href) {\n        // When link comes from SVG, `href` returns an object, not a string.\n        const attr: string =\n          ((href as unknown) as SVGAnimatedString).baseVal || href;\n\n        return this.resolveUrl(attr);\n      }\n    }\n    return null;\n  }\n\n  // Copyright 2014 Simon Lydell\n  // X11 (“MIT”) Licensed. (See LICENSE\n  // https://github.com/lydell/resolve-url/blob/master/resolve-url.js\n  /* istanbul ignore next */\n  public resolveUrl(...urls: string[]) {\n    const numUrls = urls.length;\n\n    if (numUrls === 0) {\n      throw new Error('resolveUrl requires at least one argument; got none.');\n    }\n\n    const base = document.createElement('base');\n    base.href = arguments[0];\n\n    if (numUrls === 1) {\n      return base.href;\n    }\n\n    const head = document.getElementsByTagName('head')[0];\n    head.insertBefore(base, head.firstChild);\n\n    const a = document.createElement('a');\n    let resolved;\n\n    for (let index = 1; index < numUrls; index++) {\n      a.href = arguments[index];\n      resolved = a.href;\n      base.href = resolved;\n    }\n\n    head.removeChild(base);\n\n    return resolved;\n  }\n\n  /**\n   * Insert node after another node.\n   */\n  private _insertAfter(newNode: Node, referenceNode: Node) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  }\n}\n\nconst dom = new Dom();\n\nexport { dom };\n","import { HistoryAction, LinkEvent, Trigger } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\n/**\n * @barba/core/utils/history\n * <br><br>\n * ## History manager.\n *\n * - Keep track of the navigation history\n *\n * @module core/utils/history\n * @preferred\n */\n\n/**\n * State item.\n *\n * @property from\n * @property index\n */\ninterface IHistoryItem {\n  /** origin */\n  from: string;\n  /** index */\n  index: number;\n  /** states */\n  states: IStateItem[];\n}\n\n/***/\ninterface ICoords {\n  x: number;\n  y: number;\n}\n\n/**\n * History item.\n *\n * @property namespace\n * @property scroll\n * @property URL\n */\ninterface IStateItem {\n  /** namespace */\n  ns: string | undefined;\n  /** Scroll position */\n  scroll: ICoords;\n  /** URL */\n  url: string;\n}\n\nexport class History {\n  private _session: string;\n  private _states: IStateItem[] = [];\n  private _pointer = -1;\n\n  /**\n   * Init with first state.\n   */\n  public init(url: string, ns: string): void {\n    this._session = 'barba';\n    const index = 0;\n\n    const state: IStateItem = {\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._states.push(state);\n    this._pointer = index;\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index,\n      states: [...this._states],\n    };\n\n    window.history && window.history.replaceState(item, '', url);\n  }\n\n  public change(\n    url: string,\n    trigger: Trigger,\n    e?: LinkEvent | PopStateEvent\n  ): Trigger {\n    if (e && (e as PopStateEvent).state) {\n      // If popstate, move to existing state\n      // and get back/forward direction.\n      const { state }: { state: IHistoryItem } = e as PopStateEvent;\n      const { index } = state;\n      const diff = this._pointer - index;\n\n      trigger = this._getDirection(diff);\n\n      // Work with previous states\n      this.replace(state.states);\n      this._pointer = index;\n    } else {\n      // Add new state\n      this.add(url, trigger);\n    }\n\n    return trigger;\n  }\n\n  /**\n   * Add a new state.\n   */\n  public add(url: string, trigger: Trigger): void {\n    // If no state, it will be updated later.\n    const ns = 'tmp';\n    const index = this.size;\n    const action = this._getAction(trigger);\n    const state: IStateItem = {\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._states.push(state);\n    this._pointer = index;\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index,\n      states: [...this._states],\n    };\n\n    switch (action) {\n      case 'push':\n        window.history && window.history.pushState(item, '', url);\n        break;\n      case 'replace':\n        window.history && window.history.replaceState(item, '', url);\n        break;\n      /* istanbul ignore next */\n      default:\n    }\n  }\n\n  /**\n   * Update state.\n   */\n  public update(data: any, i?: number): void {\n    const index = i || this._pointer;\n    const existing = this.get(index);\n    const state: IStateItem = {\n      ...existing,\n      ...data,\n    };\n\n    this.set(index, state);\n  }\n\n  /**\n   * Remove last state.\n   */\n  public remove(i?: number): void {\n    if (i) {\n      this._states.splice(i, 1);\n    } else {\n      this._states.pop();\n    }\n\n    this._pointer--;\n  }\n\n  /**\n   * Delete all states.\n   */\n  public clear(): void {\n    this._states = [];\n    this._pointer = -1;\n  }\n\n  /**\n   * Replace all states.\n   */\n  public replace(newStates: IStateItem[]): void {\n    this._states = newStates;\n  }\n\n  /**\n   * Get state by index.\n   */\n  public get(index: number) {\n    return this._states[index];\n  }\n\n  /**\n   * Set state by index.\n   */\n  public set(i: number, state: IStateItem) {\n    return (this._states[i] = state);\n  }\n\n  /**\n   * Get the current state.\n   */\n  get current(): IStateItem {\n    return this._states[this._pointer];\n  }\n\n  /**\n   * Get the last state (top of the history stack).\n   */\n  get state(): IStateItem {\n    return this._states[this._states.length - 1];\n  }\n\n  /**\n   * Get the previous state.\n   */\n  get previous(): IStateItem | null {\n    return this._pointer < 1 ? null : this._states[this._pointer - 1];\n  }\n\n  /**\n   * Get the state size.\n   */\n  get size(): number {\n    return this._states.length;\n  }\n\n  /**\n   * Get the history action: push vs replace\n   */\n  private _getAction(trigger: Trigger): HistoryAction {\n    let action: HistoryAction = 'push';\n\n    // Manage `data-barba-history` attribute\n    // to get the right action (push vs replace).\n    const el = trigger as HTMLAnchorElement;\n    const attr = `${schemaAttribute.prefix}-${schemaAttribute.history}`;\n\n    if (el.hasAttribute && el.hasAttribute(attr)) {\n      action = el.getAttribute(attr) as HistoryAction;\n    }\n\n    return action;\n  }\n\n  /**\n   * Get the direction of popstate change\n   */\n  private _getDirection(diff: number): Trigger {\n    // Check if \"session switch\"\n    if (Math.abs(diff) > 1) {\n      // Ex 6-0 > 0 -> forward, 0-6 < 0 -> back\n      return diff > 0 ? 'forward' : 'back';\n    } else {\n      if (diff === 0) {\n        return 'popstate';\n      } else {\n        // Ex 6-5 > 0 -> back, 5-6 < 0 -> forward\n        return diff > 0 ? 'back' : 'forward';\n      }\n    }\n  }\n}\n\nconst history = new History();\n\nexport { history };\n","/**\n * @barba/core/utils/helpers\n * <br><br>\n * ## Helpers\n *\n * - Update next page data\n *\n * @module core/utils/helpers\n * @preferred\n */\n\n/***/\n\n// Third-party\nimport ptr from 'path-to-regexp';\n// Definitions\nimport { ITransitionData } from '../defs';\n// Utils\nimport { dom } from './dom';\nimport { history } from './history';\n\n/**\n * Update `data.next`, the title and the history\n */\nexport const update = async (\n  page: Promise<string | void>,\n  data: ITransitionData\n): Promise<void> => {\n  // If not already updated\n  if (!data.next.html) {\n    const html = await page;\n    const { next } = data;\n\n    if (html) {\n      // see: https://github.com/barbajs/barba/issues/362\n      // const nextDocument = dom.toDocument(html);\n      const nextDocument = dom.toElement(html);\n\n      next.namespace = dom.getNamespace(nextDocument);\n      next.container = dom.getContainer(nextDocument);\n      // see https://github.com/barbajs/barba/issues/362\n      // next.html = dom.getHtml(nextDocument);\n      // next.html = nextDocument.innerHTML;\n      next.html = html;\n\n      // Update history namespace (not available when initially set)\n      history.update({ ns: next.namespace });\n\n      // Update title.\n      const { title } = dom.toDocument(html);\n\n      document.title = title;\n    }\n  }\n};\n\n/**\n * Next tick\n */\nexport const nextTick = () =>\n  new Promise(resolve => {\n    window.requestAnimationFrame(resolve);\n    // DEV: same result?\n    // setTimeout(resolve, 0);\n  });\n\n/**\n * Turn a route string such as `/user/:name` into a regular expression.\n *\n * Used for:\n *\n * - routes to ignore\n * - route transition resolution\n *\n * @see https://www.npmjs.com/package/path-to-regexp\n */\nconst pathToRegexp = ptr;\n\nexport { pathToRegexp };\n","/**\n * @barba/core/utils/url\n * <br><br>\n * ## URL utils.\n *\n * - Collect and structure informations from URLs\n *\n * @module core/utils/url\n */\n\n/***/\n\n// Definitions\nimport { IGenericObject, IUrlBase } from '../defs';\n\n/**\n * Get location href.\n */\nexport const getHref = () => window.location.href;\n\n/**\n * Get location origin.\n */\nexport const getOrigin = () => window.location.origin;\n\n/**\n * Get port based on URL or location.\n */\nexport const getPort = (url: string = window.location.href) => parse(url).port;\n\n/**\n * Get path from URL.\n */\nexport const getPath = (url: string = window.location.href) => parse(url).path;\n\n/**\n * Get query object from URL.\n */\n// export const getQuery = (url: string): IGenericObject => parse(url).query;\n\n/**\n * Get hash from URL.\n */\n// export const getHash = (url: string): string => parse(url).hash;\n\n/**\n * Parse URL for path, query and hash and more.\n */\nexport const parse = (url: string): IUrlBase => {\n  // Port\n  let port;\n  const matches = url.match(/:\\d+/);\n\n  if (matches === null) {\n    if (/^http/.test(url)) {\n      port = 80;\n    }\n\n    if (/^https/.test(url)) {\n      port = 443;\n    }\n  } else {\n    const portString = matches[0].substring(1);\n\n    port = parseInt(portString, 10);\n  }\n\n  // Path\n  let path = url.replace(getOrigin(), '');\n  let hash;\n  let query = {};\n\n  // Hash\n  const hashIndex = path.indexOf('#');\n\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex + 1);\n    path = path.slice(0, hashIndex);\n  }\n\n  // Query\n  const queryIndex = path.indexOf('?');\n\n  if (queryIndex >= 0) {\n    query = parseQuery(path.slice(queryIndex + 1));\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    hash,\n    path,\n    port,\n    query,\n  };\n};\n\n/**\n * Parse a query string to object.\n */\nexport const parseQuery = (str: string) =>\n  str.split('&').reduce((acc: IGenericObject, el: string) => {\n    const [key, value] = el.split('=');\n\n    acc[key] = value;\n\n    return acc;\n  }, {});\n\n/**\n * Clean URL, remove \"hash\" and/or \"trailing slash\".\n */\nexport const clean = (url: string = window.location.href) =>\n  url.replace(/(\\/#.*|\\/|#.*)$/, '');\n","/**\n * @barba/core/utils/request\n * <br><br>\n * ## Fetch pages for transitions.\n *\n * - Includes timeout\n * - Uses Fetch API\n * - Handles errors\n *\n * @module core/utils/request\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { RequestError } from '../defs';\n\n/**\n * Init a page request.\n * Fetch the page and returns a promise with the text content.\n */\nfunction request(\n  url: string,\n  ttl: number = 2e3,\n  requestError: RequestError\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          resolve(xhr.responseText);\n        } else if (xhr.status) {\n          // HTTP code is not 200, reject with response.\n          const res = {\n            status: xhr.status,\n            statusText: xhr.statusText,\n          };\n          requestError(url, res);\n          reject(res);\n        }\n      }\n    };\n    xhr.ontimeout = () => {\n      const err = new Error(`Timeout error [${ttl}]`);\n      requestError(url, err);\n      reject(err);\n    };\n    xhr.onerror = () => {\n      const err = new Error(`Fetch error`);\n      requestError(url, err);\n      reject(err);\n    };\n\n    xhr.open('GET', url);\n    xhr.timeout = ttl;\n    xhr.setRequestHeader(\n      'Accept',\n      'text/html,application/xhtml+xml,application/xml'\n    );\n    xhr.setRequestHeader('x-barba', 'yes');\n    xhr.send();\n  });\n}\n\nexport { request };\n","module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","import isPromise from 'is-promise';\n\n// https://github.com/SBoudrias/run-async\n/* istanbul ignore next */\nexport function runAsync(\n  func: (...args: any[]) => void | Promise<any>,\n  ctx: any = {}\n): (...args: any[]) => Promise<any> {\n  return (...args: any[]) => {\n    let async = false;\n\n    const promise = new Promise((resolve, reject) => {\n      // Add async to context\n      ctx.async = () => {\n        async = true;\n\n        return (err: any, value: any) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(value);\n          }\n        };\n      };\n\n      const answer = func.apply(ctx, args as []);\n\n      if (!async) {\n        if (isPromise(answer)) {\n          (answer as Promise<any>).then(resolve, reject);\n        } else {\n          resolve(answer);\n        }\n      }\n    });\n\n    return promise;\n  };\n}\n","/**\n * @barba/core/modules/hooks\n * <br><br>\n * ## Hooks manager.\n *\n * - Register and trigger hooks\n *\n * Hooks can be easily registered:\n *\n * ```js\n * hooks.leave(callback, context);\n * ```\n *\n * @module core/modules/hooks\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HookFunction, HookMethods, HooksAll } from './defs';\n// Modules\nimport { Logger } from './modules/Logger';\n// Utils\nimport { runAsync } from './utils';\n// Types\ninterface IHookInfos {\n  ctx: any;\n  fn: HookFunction;\n}\n\nexport class Hooks extends HookMethods {\n  /**\n   * Allow the use of `hooks[name](cb, ctx)`.\n   */\n  [key: string]: any;\n  // [key in HooksAll]?: any;\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All available hooks.\n   *\n   * See [[HooksAll]]\n   */\n  // TODO: get hooks from defs (DRY)?\n  public all: HooksAll[] = [\n    'ready',\n    'page',\n    'reset',\n    'currentAdded',\n    'currentRemoved',\n    'nextAdded',\n    'nextRemoved',\n    'beforeOnce',\n    'once',\n    'afterOnce',\n    'before',\n    'beforeLeave',\n    'leave',\n    'afterLeave',\n    'beforeEnter',\n    'enter',\n    'afterEnter',\n    'after',\n  ];\n  /**\n   * Registered hooks.\n   *\n   * - Unique hook name\n   * - Associated data set(s) (callback + context)\n   */\n  public registered: Map<HooksAll, Set<IHookInfos>> = new Map();\n\n  constructor() {\n    super();\n    this.init();\n  }\n\n  public init() {\n    this.registered.clear();\n    this.all.forEach(hook => {\n      if (!this[hook]) {\n        this[hook] = (fn: HookFunction, ctx?: any) => {\n          if (!this.registered.has(hook)) {\n            this.registered.set(hook, new Set());\n          }\n          const set = this.registered.get(hook);\n\n          set.add({\n            ctx: ctx || {},\n            fn,\n          });\n        };\n      }\n    });\n  }\n\n  /**\n   * Do hook.\n   *\n   * Trigger registered hooks.\n   */\n  public do(name: HooksAll, ...args: any): Promise<any> {\n    if (this.registered.has(name)) {\n      // Let's start a chain of promises\n      let chain = Promise.resolve();\n\n      this.registered.get(name).forEach(hook => {\n        // Chain async hooks promisified\n        chain = chain.then(() => runAsync(hook.fn, hook.ctx)(...args));\n      });\n\n      return chain.catch(error => {\n        this.logger.debug(`Hook error [${name}]`);\n        this.logger.error(error);\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  public clear(): void {\n    this.all.forEach(hook => {\n      delete this[hook];\n    });\n\n    this.init();\n  }\n\n  /**\n   * Help, print available and registered hooks.\n   */\n  public help(): void {\n    this.logger.info(`Available hooks: ${this.all.join(',')}`);\n    const registered: string[] = [];\n    this.registered.forEach((value, key) => registered.push(key));\n    this.logger.info(`Registered hooks: ${registered.join(',')}`);\n  }\n}\n\nconst hooks = new Hooks();\n\nexport { hooks };\n","/**\n * @module typings/core\n */\nimport { ITransitionData, ITransitionPage, IViewData } from './index';\n\nexport type HooksBarba =\n  | 'ready'\n  | 'page'\n  | 'reset'\n  | 'currentAdded'\n  | 'currentRemoved'\n  | 'nextAdded'\n  | 'nextRemoved';\n\nexport type HooksOnce = 'beforeOnce' | 'once' | 'afterOnce';\n\nexport type HooksPage =\n  | 'before'\n  | 'beforeLeave'\n  | 'leave'\n  | 'afterLeave'\n  | 'beforeEnter'\n  | 'enter'\n  | 'afterEnter'\n  | 'after';\n\nexport type HooksBefore = 'beforeOnce' | 'beforeLeave' | 'beforeEnter';\nexport type HooksAfter = 'afterOnce' | 'afterLeave' | 'afterEnter';\n\nexport type HooksTransition = HooksOnce | HooksPage;\nexport type HooksView = HooksBefore | HooksAfter;\nexport type HooksAll = HooksBarba | HooksTransition;\n\n// Allow optional \"dynamically created\" hooks\nexport type HooksTransitionMap = { [key in HooksTransition]?: any };\n\nexport type HookFunction = (\n  data?: ITransitionData | IViewData,\n  t?: ITransitionPage\n) => Promise<void> | void;\n\nexport class HookMethods {\n  public before: (fn: HookFunction, ctx?: any) => void;\n  public beforeLeave: (fn: HookFunction, ctx?: any) => void;\n  public leave: (fn: HookFunction, ctx?: any) => void;\n  public afterLeave: (fn: HookFunction, ctx?: any) => void;\n  public beforeEnter: (fn: HookFunction, ctx?: any) => void;\n  public enter: (fn: HookFunction, ctx?: any) => void;\n  public afterEnter: (fn: HookFunction, ctx?: any) => void;\n  public after: (fn: HookFunction, ctx?: any) => void;\n}\n","/**\n * @barba/core/modules/ignore\n * <br><br>\n * ## Manage ignore options.\n *\n * - cache\n * - prefetch\n *\n * @module core/modules/ignore\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption } from '../defs';\n// Utils\nimport { pathToRegexp } from '../utils/helpers';\nimport { parse } from '../utils/url';\n\nexport class Ignore {\n  private _ignoreAll: boolean;\n  private _ignoreRegexes: RegExp[] = [];\n\n  constructor(ignore: IgnoreOption) {\n    if (typeof ignore === 'boolean') {\n      this._ignoreAll = ignore;\n    } else {\n      const paths = Array.isArray(ignore) ? ignore : [ignore];\n\n      this._ignoreRegexes = paths.map(p => pathToRegexp(p));\n    }\n  }\n\n  public checkHref(href: string): boolean {\n    if (typeof this._ignoreAll === 'boolean') {\n      return this._ignoreAll;\n    }\n\n    const { path } = parse(href);\n\n    return this._ignoreRegexes.some(regex => regex.exec(path) !== null);\n  }\n}\n","/**\n * @barba/core/modules/cache\n * <br><br>\n * ## Cache for storing URL / HTML.\n *\n * @module core/modules/cache\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { CacheAction, CacheRequest, ICacheData, IgnoreOption } from '../defs';\n// Modules\nimport { Ignore } from './Ignore';\n\nexport class Cache extends Ignore {\n  private _state: Map<string, ICacheData> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n  }\n\n  /**\n   * Set value to cache\n   */\n  public set(\n    href: string,\n    request: CacheRequest,\n    action: CacheAction\n  ): ICacheData {\n    this._state.set(href, {\n      action,\n      request,\n    });\n\n    return {\n      action,\n      request,\n    };\n  }\n\n  /**\n   * Get data from cache\n   */\n  public get(href: string): ICacheData {\n    return this._state.get(href);\n  }\n\n  /**\n   * Get request from cache\n   */\n  public getRequest(href: string): CacheRequest {\n    return this._state.get(href).request;\n  }\n\n  /**\n   * Get action from cache\n   */\n  public getAction(href: string): CacheAction {\n    return this._state.get(href).action;\n  }\n\n  /**\n   * Check if value exists into cache\n   */\n  public has(href: string): boolean {\n    /* istanbul ignore else */\n    if (this.checkHref(href)) {\n      return false;\n    }\n    return this._state.has(href);\n  }\n\n  /**\n   * Delete value from cache\n   */\n  public delete(href: string): boolean {\n    return this._state.delete(href);\n  }\n\n  /**\n   * Update cache value\n   */\n  public update(href: string, data: ICacheData): ICacheData {\n    const state = {\n      ...this._state.get(href),\n      ...data,\n    };\n    this._state.set(href, state);\n\n    return state;\n  }\n}\n","/**\n * @barba/core/modules/prevent\n * <br><br>\n * ## Prevent checks.\n *\n * - Gathers all the tests that allow Barba to work and play transitions\n *\n * @module core/modules/prevent\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption, Link, PreventCheck } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n// Utils\nimport { url } from '../utils';\n// Modules\nimport { Ignore } from './Ignore';\n\n/**\n * Make sure the browser supports `history.pushState`.\n */\nconst pushState: PreventCheck = () => !window.history.pushState;\n\n/**\n * Make sure there is an `el` and `href`.\n */\nconst exists: PreventCheck = ({ el, href }) => !el || !href;\n\n/**\n * If the user is pressing ctrl + click, the browser will open a new tab.\n */\nconst newTab: PreventCheck = ({ event }) =>\n  (event as KeyboardEvent).which > 1 ||\n  (event as KeyboardEvent).metaKey ||\n  (event as KeyboardEvent).ctrlKey ||\n  (event as KeyboardEvent).shiftKey ||\n  (event as KeyboardEvent).altKey;\n\n/**\n * If the link has `_blank` target.\n */\nconst blank: PreventCheck = ({ el }) =>\n  el.hasAttribute('target') && (el as Link).target === '_blank';\n\n/**\n * If the domain is the same (in order to avoid pushState cross origin security problem).\n * Note: SVGAElement do not have `protocol` neither `hostname` properties.\n */\nconst corsDomain: PreventCheck = ({ el }) =>\n  ((el as HTMLAnchorElement).protocol !== undefined &&\n    window.location.protocol !== (el as HTMLAnchorElement).protocol) ||\n  ((el as HTMLAnchorElement).hostname !== undefined &&\n    window.location.hostname !== (el as HTMLAnchorElement).hostname);\n\n/**\n * If the port is the same.\n * Note: SVGAElement do not have `port` property.\n */\nconst corsPort: PreventCheck = ({ el }) =>\n  (el as HTMLAnchorElement).port !== undefined &&\n  url.getPort() !== url.getPort((el as HTMLAnchorElement).href);\n\n/**\n * If the link has download attribute.\n */\nconst download: PreventCheck = ({ el }) =>\n  el.getAttribute && typeof el.getAttribute('download') === 'string';\n\n/**\n * If the links contains [data-barba-prevent] or [data-barba-prevent=\"self\"].\n */\nconst preventSelf: PreventCheck = ({ el }) =>\n  el.hasAttribute(`${schemaAttribute.prefix}-${schemaAttribute.prevent}`);\n\n/**\n * If some link ancestor contains [data-barba-prevent=\"all\"].\n */\nconst preventAll: PreventCheck = ({ el }) =>\n  Boolean(\n    el.closest(`[${schemaAttribute.prefix}-${schemaAttribute.prevent}=\"all\"]`)\n  );\n\n/**\n * If the link is the current URL.\n *\n * > Not in the test suite.\n */\nconst sameUrl: PreventCheck = ({ href }) =>\n  url.clean(href) === url.clean() && url.getPort(href) === url.getPort();\n\nexport class Prevent extends Ignore {\n  public suite: string[] = [];\n  public tests: Map<string, PreventCheck> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n    this.init();\n  }\n\n  public init(): void {\n    // Add defaults\n    this.add('pushState', pushState);\n    this.add('exists', exists);\n    this.add('newTab', newTab);\n    this.add('blank', blank);\n    this.add('corsDomain', corsDomain);\n    this.add('corsPort', corsPort);\n    this.add('download', download);\n    this.add('preventSelf', preventSelf);\n    this.add('preventAll', preventAll);\n\n    // Outside of the test suite\n    this.add('sameUrl', sameUrl, false);\n  }\n\n  public add(name: string, check: PreventCheck, suite: boolean = true): void {\n    this.tests.set(name, check);\n    suite && this.suite.push(name);\n  }\n\n  /**\n   * Run individual test\n   */\n  public run(name: string, el: Link, event: Event, href: string): boolean {\n    return this.tests.get(name)({\n      el,\n      event,\n      href,\n    });\n  }\n\n  /**\n   * Run test suite\n   */\n  public checkLink(el: Link, event: Event, href: string): boolean {\n    return this.suite.some(name => this.run(name, el, event, href));\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class BarbaError extends Error {\n  /* istanbul ignore next */\n  constructor(\n    public error: Error,\n    public label = 'Barba error',\n    ...params: any[]\n  ) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    /* istanbul ignore else */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, BarbaError);\n    }\n\n    this.name = 'BarbaError';\n  }\n}\n","/**\n * @barba/core/modules/store\n * <br><br>\n * ## Transitions store.\n *\n * - Resolve transition\n * - Manage rules\n *\n * @module core/modules/store\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  IRule,\n  IRules,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  RuleName,\n} from '../defs';\n\n// Modules\nimport { Logger } from './Logger';\n\nexport class Store {\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All registered transitions.\n   */\n  public all: ITransitionPage[] = [];\n  /**\n   * \"Page only\" registered transitions.\n   */\n  public page: ITransitionPage[] = [];\n  /**\n   * \"Once only\" registered transitions.\n   */\n  public once: ITransitionOnce[] = [];\n  /**\n   * Rules for transition resolution.\n   *\n   * Defaults:\n   *\n   * - namespace\n   * - custom\n   */\n  private _rules: IRule[] = [\n    {\n      name: 'namespace',\n      type: 'strings',\n    },\n    {\n      name: 'custom',\n      type: 'function',\n    },\n  ];\n\n  /**\n   * Init store.\n   */\n  constructor(transitions: ITransitionPage[] = []) {\n    /* istanbul ignore else */\n    if (transitions) {\n      // TODO: add check for valid transitions? criteria? (once || enter && leave)\n      this.all = this.all.concat(transitions);\n    }\n    this.update();\n  }\n\n  /**\n   * Add rule or transition.\n   */\n  public add(type: 'rule' | 'transition', data: any): void {\n    switch (type) {\n      case 'rule':\n        // TODO: check for valid rule\n        this._rules.splice(data.position || 0, 0, data.value);\n        break;\n      case 'transition':\n      default:\n        // TODO: check for valid transition\n        this.all.push(data);\n        break;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Resolve transition.\n   */\n  public resolve(\n    data: ITransitionData,\n    filters: ITransitionFilters = {}\n  ): ITransitionOnce | ITransitionPage {\n    // Filter on \"once\"\n    let transitions = filters.once ? this.once : this.page;\n\n    // Filter on \"self\"\n    if (filters.self) {\n      transitions = transitions.filter(t => t.name && t.name === 'self');\n    } else {\n      transitions = transitions.filter(t => !t.name || t.name !== 'self');\n    }\n\n    // All matching transition infos\n    const matching = new Map();\n\n    // Active = first of valid transitions\n    // sorted by directions (from/to, from || to, …)\n    const active = transitions.find(t => {\n      let valid = true;\n      const match = {};\n\n      if (filters.self && t.name === 'self') {\n        return true;\n      }\n\n      // Check rules\n      this._rules.reverse().forEach(rule => {\n        if (valid) {\n          valid = this._check(t, rule, data, match);\n          // From/to check\n          if (t.from && t.to) {\n            valid =\n              this._check(t, rule, data, match, 'from') &&\n              this._check(t, rule, data, match, 'to');\n          }\n          if (t.from && !t.to) {\n            valid = this._check(t, rule, data, match, 'from');\n          }\n          if (!t.from && t.to) {\n            valid = this._check(t, rule, data, match, 'to');\n          }\n        }\n      });\n\n      matching.set(t, match);\n\n      return valid;\n    });\n\n    const activeMatch = matching.get(active);\n    const transitionType = [];\n    if (filters.once) {\n      transitionType.push('once');\n    } else {\n      transitionType.push('page');\n    }\n    if (filters.self) {\n      transitionType.push('self');\n    }\n\n    if (activeMatch) {\n      // Log resolved transition\n      const infos: any[] = [active];\n      // Log if matching criteria\n      Object.keys(activeMatch).length > 0 && infos.push(activeMatch);\n\n      this.logger.info(\n        `Transition found [${transitionType.join(',')}]`,\n        ...infos\n      );\n    } else {\n      this.logger.info(`No transition found [${transitionType.join(',')}]`);\n    }\n\n    return active;\n  }\n\n  /**\n   * ### Update store.\n   *\n   * - Reorder transition by priorities\n   * - Get wait indicator\n   * - Get once transitions\n   */\n  public update(): void {\n    // Reorder by priorities\n    this.all = this.all\n      .map(t => this._addPriority(t))\n      .sort((a, b) => a.priority - b.priority)\n      .reverse()\n      .map(t => {\n        delete t.priority;\n\n        return t;\n      });\n    this.page = this.all.filter(\n      t => t.leave !== undefined || t.enter !== undefined\n    ) as ITransitionPage[];\n    this.once = this.all.filter(t => t.once !== undefined) as ITransitionOnce[];\n  }\n\n  /**\n   * ### Check if transition apply.\n   *\n   * Based on rule, page data and optional direction:\n   *\n   * 1. transition has no rule \"property\":\n   *    - always returns true\n   * 2. transition has rule \"property\":\n   *     - \"strings\" should be present on both side (transition + page) and match\n   *     - \"function\" should return true\n   */\n  private _check(\n    transition: ITransitionPage,\n    rule: IRule,\n    data: ITransitionData,\n    match: any,\n    direction?: 'from' | 'to'\n  ): boolean {\n    let isValid = true;\n    let hasMatch = false;\n    const t = transition;\n    const { name, type } = rule;\n    const strRule = name as IRules['strings'];\n    const objRule = name as IRules['object'];\n    const fnName = name as IRules['function'];\n    const base = direction ? t[direction] : t; // = t || t.from || t.to\n    const page = direction === 'to' ? data.next : data.current; // = current || next\n    const exist = direction ? base && base[name] : base[name];\n\n    // If transition rule exists\n    if (exist) {\n      switch (type) {\n        case 'strings':\n        default: {\n          // Array support\n          const names: string[] = Array.isArray(base[strRule])\n            ? (base[strRule] as string[])\n            : [base[strRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[strRule] && names.indexOf(page[strRule]) !== -1) {\n            hasMatch = true;\n          }\n          // If transition prop is different from current, not valid\n          if (names.indexOf(page[strRule]) === -1) {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'object': {\n          // Array support\n          const names: string[] = Array.isArray(base[objRule])\n            ? (base[objRule] as string[])\n            : [base[objRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[objRule]) {\n            if (\n              page[objRule].name &&\n              names.indexOf(page[objRule].name) !== -1\n            ) {\n              hasMatch = true;\n            }\n            // If transition prop is different from current, not valid\n            if (names.indexOf(page[objRule].name) === -1) {\n              isValid = false;\n            }\n          } else {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'function':\n          if (base[fnName](data)) {\n            hasMatch = true;\n          } else {\n            isValid = false;\n          }\n          break;\n      }\n\n      if (hasMatch) {\n        if (direction) {\n          match[direction] = match[direction] || {};\n          match[direction][name] = t[direction][name];\n        } else {\n          match[name] = t[name];\n        }\n      }\n    }\n\n    return isValid;\n  }\n\n  /**\n   * ### Calculate transition priority.\n   *\n   * Based on:\n   *\n   * - rule \"position\" (index) give tens, hundreds, thousands, …\n   * - from/to properties give units (0, 1 or 2)\n   */\n  private _calculatePriority(\n    t: ITransitionPage,\n    ruleName: RuleName,\n    ruleIndex: number\n  ): number {\n    let priority = 0;\n\n    if (\n      t[ruleName] ||\n      (t.from && t.from[ruleName]) ||\n      (t.to && t.to[ruleName])\n    ) {\n      priority += Math.pow(10, ruleIndex);\n\n      if (t.from && t.from[ruleName]) {\n        priority += 1;\n      }\n      if (t.to && t.to[ruleName]) {\n        priority += 2;\n      }\n    }\n\n    return priority;\n  }\n\n  private _addPriority(t: ITransitionPage): ITransitionPage {\n    t.priority = 0;\n    let priority = 0;\n\n    this._rules.forEach((rule, i) => {\n      const { name } = rule;\n      const index = i + 1;\n\n      priority += this._calculatePriority(t, name, index);\n    });\n\n    t.priority = priority;\n\n    return t;\n  }\n}\n","/**\n * @barba/core/modules/transitions\n * <br><br>\n * ## Transitions manager.\n *\n * - Handle hooks and transition lifecycle\n *\n * @module core/modules/transitions\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  HooksTransition,\n  HooksTransitionMap,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  Wrapper,\n} from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { dom, helpers, runAsync } from '../utils';\n// Modules\nimport { BarbaError } from './Error';\nimport { Logger } from './Logger';\nimport { Store } from './Store';\n\nexport class Transitions {\n  public logger: Logger = new Logger('@barba/core');\n  public store: Store;\n  private _running: boolean = false;\n\n  constructor(transitions: ITransitionPage[] = []) {\n    this.store = new Store(transitions);\n  }\n\n  /**\n   * Get resolved transition\n   *\n   * - based on data\n   */\n  public get(\n    data: ITransitionData,\n    filters?: ITransitionFilters\n  ): ITransitionOnce | ITransitionPage {\n    return this.store.resolve(data, filters);\n  }\n\n  /**\n   * Animation running status.\n   */\n  get isRunning(): boolean {\n    return this._running;\n  }\n  set isRunning(status: boolean) {\n    this._running = status;\n  }\n\n  /**\n   * Check for registered once transition(s).\n   */\n  get hasOnce(): boolean {\n    return this.store.once.length > 0;\n  }\n\n  /**\n   * Check for registered self transition.\n   */\n  get hasSelf(): boolean {\n    return this.store.all.some(t => t.name === 'self');\n  }\n\n  /**\n   * ### Wait indicator.\n   *\n   * Tells Barba to get next page data<br>\n   * before starting the resolution<br>\n   * because some registered transitions need<br>\n   * next page data to be resolved (eg: `sync: true`, `to: { namespace }`, …)\n   */\n  get shouldWait(): boolean {\n    return this.store.all.some(t => (t.to && !t.to.route) || t.sync);\n  }\n\n  /**\n   * ### Do \"once\" transition.\n   *\n   * Hooks: see [[HooksOnce]].\n   */\n  public async doOnce({\n    data,\n    transition,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionOnce;\n  }) {\n    const t = transition || {};\n    this._running = true;\n\n    try {\n      await this._doAsyncHook('beforeOnce', data, t);\n      await this.once(data, t);\n      await this._doAsyncHook('afterOnce', data, t);\n    } catch (error) {\n      this._running = false;\n\n      this.logger.debug('Transition error [before/after/once]');\n      this.logger.error(error);\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * ### Do \"page\" transition.\n   *\n   * Hooks: see [[HooksPage]].\n   *\n   * `sync: false` (default) order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. leave\n   * 4. afterLeave\n   * 5. beforeEnter\n   * 6. enter\n   * 7. afterEnter\n   * 8. after\n   *\n   * `sync: true` order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. beforeEnter\n   * 4. leave & enter\n   * 5. afterLeave\n   * 6. afterEnter\n   * 7. after\n   */\n  public async doPage({\n    data,\n    transition,\n    page,\n    wrapper,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionPage;\n    page: Promise<string | void>;\n    wrapper: Wrapper;\n  }) {\n    const t = transition || {};\n    const sync = t.sync === true || false;\n\n    this._running = true;\n\n    try {\n      // Check sync mode, wait for next content\n      if (sync) {\n        await helpers.update(page, data);\n      }\n\n      await this._doAsyncHook('before', data, t);\n\n      if (sync) {\n        try {\n          await this.add(data, wrapper);\n          // Before actions\n          await this._doAsyncHook('beforeLeave', data, t);\n          await this._doAsyncHook('beforeEnter', data, t);\n\n          // Actions\n          await Promise.all([this.leave(data, t), this.enter(data, t)]);\n\n          // After actions\n          await this._doAsyncHook('afterLeave', data, t);\n          await this._doAsyncHook('afterEnter', data, t);\n        } catch (error) {\n          // this.logger.debug('Transition error [sync]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(error, 'Transition error [sync]');\n          }\n        }\n      } else {\n        let leaveResult: any = false;\n\n        try {\n          // Leave\n          await this._doAsyncHook('beforeLeave', data, t);\n\n          leaveResult = await Promise.all([\n            this.leave(data, t),\n            helpers.update(page, data),\n          ]).then(values => values[0]);\n\n          await this._doAsyncHook('afterLeave', data, t);\n\n          // TODO: check here \"valid\" page result\n          // before going further\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/leave]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              error,\n              'Transition error [before/after/leave]'\n            );\n          }\n        }\n\n        try {\n          // Enter\n          /* istanbul ignore else */\n          if (leaveResult !== false) {\n            await this.add(data, wrapper);\n\n            await this._doAsyncHook('beforeEnter', data, t);\n            await this.enter(data, t, leaveResult);\n            await this._doAsyncHook('afterEnter', data, t);\n          }\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/enter]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              error,\n              'Transition error [before/after/enter]'\n            );\n          }\n        }\n      }\n\n      // Remove current contaienr\n      await this.remove(data);\n\n      await this._doAsyncHook('after', data, t);\n    } catch (error) {\n      this._running = false;\n\n      // If \"custom/specific\" barba error.\n      /* istanbul ignore else */\n      if (error.name && error.name === 'BarbaError') {\n        this.logger.debug(error.label);\n        this.logger.error(error.error);\n\n        throw error;\n      }\n\n      this.logger.debug('Transition error [page]');\n      this.logger.error(error);\n\n      throw error;\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * Once hook + async \"once\" transition.\n   */\n  public async once(data: ITransitionData, t: ITransitionOnce): Promise<void> {\n    await hooks.do('once', data, t);\n\n    return t.once ? runAsync(t.once, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Leave hook + async \"leave\" transition.\n   */\n  public async leave(data: ITransitionData, t: ITransitionPage): Promise<any> {\n    await hooks.do('leave', data, t);\n\n    return t.leave ? runAsync(t.leave, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Enter hook + async \"enter\" transition.\n   */\n  public async enter(\n    data: ITransitionData,\n    t: ITransitionPage,\n    leaveResult?: any\n  ): Promise<void> {\n    await hooks.do('enter', data, t);\n\n    return t.enter\n      ? runAsync(t.enter, t)(data, leaveResult)\n      : Promise.resolve();\n  }\n\n  /**\n   * Add next container.\n   */\n  public async add(data: ITransitionData, wrapper: Wrapper): Promise<void> {\n    dom.addContainer(data.next.container, wrapper);\n    hooks.do('nextAdded', data);\n  }\n\n  /**\n   * Remove current container.\n   */\n  public async remove(data: ITransitionData): Promise<void> {\n    dom.removeContainer(data.current.container);\n    hooks.do('currentRemoved', data);\n  }\n\n  private _isTransitionError(error: any) {\n    if (error.message) {\n      // Errors from request\n      return !/Timeout error|Fetch error/.test(error.message);\n    }\n\n    if (error.status) {\n      // Errors from request\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Do hooks + async transition methods.\n   */\n  private async _doAsyncHook(\n    hook: HooksTransition,\n    data: ITransitionData,\n    t: HooksTransitionMap\n  ): Promise<void> {\n    await hooks.do(hook, data, t);\n\n    return t[hook] ? runAsync(t[hook], t)(data) : Promise.resolve();\n  }\n}\n","/**\n * @barba/core/modules/views\n * <br><br>\n * ## Views manager.\n *\n * @module core/modules/views\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HooksView, IView, IViewData } from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { runAsync } from '../utils';\n// Types\ntype Hook = (data: IViewData) => Promise<void>;\n\nexport class Views {\n  /**\n   * Available hook names for views.\n   */\n  public names: HooksView[] = [\n    'beforeLeave',\n    'afterLeave',\n    'beforeEnter',\n    'afterEnter',\n  ];\n  /**\n   * Registered views by namespace.\n   */\n  public byNamespace: Map<string, IView> = new Map();\n\n  /**\n   * Init views.\n   */\n  constructor(views: IView[]) {\n    if (views.length === 0) {\n      return;\n    }\n\n    // TODO: add check\n    // for valid views? criteria? (namespace property, string ?)\n    // or duplicate\n    views.forEach(view => {\n      this.byNamespace.set(view.namespace, view);\n    });\n\n    this.names.forEach(name => {\n      hooks[name](this._createHook(name));\n    });\n  }\n\n  /**\n   * Create the hook method.\n   *\n   * - get view based on namespace\n   * - execute callback with transition data\n   */\n  private _createHook(name: HooksView): Hook {\n    return data => {\n      const { namespace } = name.match(/enter/i) ? data.next : data.current;\n      const view = this.byNamespace.get(namespace);\n\n      // TODO: manage self…\n      // if (view && data.trigger !== 'self') {\n      if (view && view[name]) {\n        return runAsync(view[name], view)(data);\n      }\n\n      return Promise.resolve();\n    };\n  }\n}\n","// Element.prototype.matches polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    (Element as any).prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n}\n\n// Element.prototype.closest polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function closest(s: string) {\n    let el = this;\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = (el.parentElement || el.parentNode) as Element;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n","/**\n * @module core/schemas\n */\n\n// Definitions\nimport { ISchemaPage } from '../defs';\n\n/**\n * See [[ISchemaPage]]\n */\nexport const schemaPage: ISchemaPage = {\n  container: null,\n  html: '',\n  namespace: '',\n  url: {\n    hash: '',\n    href: '',\n    path: '',\n    port: null,\n    query: {},\n  },\n};\n","/**\n * @barba/core\n * <br><br>\n * ## Barba core object\n *\n * Main methods:\n *\n * - `.init()` for initialization with options\n * - `.use()` for plugins\n *\n * @module core\n */\n\n/***/\n\nimport { version } from '../package.json';\n// Definitions\nimport {\n  IBarbaOptions,\n  IBarbaPlugin,\n  IgnoreOption,\n  ISchemaPage,\n  ITransitionData,\n  ITransitionOnce,\n  ITransitionPage,\n  Link,\n  LinkEvent,\n  RequestCustomError,\n  RequestErrorOrResponse,\n  SchemaAttributeValues,\n  Trigger,\n  Wrapper,\n} from './defs';\n// Hooks\nimport { hooks } from './hooks';\n// Modules\nimport { Cache } from './modules/Cache';\nimport { Logger } from './modules/Logger';\nimport { Prevent } from './modules/Prevent';\nimport { Transitions } from './modules/Transitions';\nimport { Views } from './modules/Views';\n// Polyfills\nimport './polyfills';\n// Schemas\nimport { schemaAttribute } from './schemas/attribute';\nimport { schemaPage } from './schemas/page';\n// Utils\nimport { dom, helpers, history, request, url } from './utils';\n\nexport class Core {\n  /**\n   * Version.\n   */\n  public version: string = version;\n  /**\n   * Schemas.\n   */\n  public schemaPage: ISchemaPage = schemaPage;\n  /**\n   * Logger class, allows plugins to create Logger.\n   */\n  public Logger: typeof Logger = Logger;\n  /**\n   * Barba logger.\n   */\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * Plugins.\n   */\n  public plugins: Array<IBarbaPlugin<any>> = [];\n  /**\n   * Options\n   */\n  public timeout: number;\n  public cacheIgnore: IgnoreOption;\n  public prefetchIgnore: IgnoreOption;\n  public preventRunning: boolean;\n  /**\n   * Hooks\n   */\n  public hooks = hooks;\n  /**\n   * Modules.\n   */\n  // public history: History;\n  public cache: Cache;\n  public prevent: Prevent;\n  public transitions: Transitions;\n  public views: Views;\n  /**\n   * Utils.\n   */\n  public dom = dom;\n  public helpers = helpers;\n  public history = history;\n  public request = request;\n  public url = url;\n\n  private _data: ITransitionData;\n  private _requestCustomError: RequestCustomError;\n  private _wrapper: Wrapper;\n\n  /**\n   * ### Init plugin with options.\n   *\n   * See [[IBarbaPlugin]] for more details.\n   */\n  public use<T>(plugin: IBarbaPlugin<T>, options?: T): void {\n    const installedPlugins = this.plugins;\n\n    // Plugin installation\n    if (installedPlugins.indexOf(plugin) > -1) {\n      this.logger.warn(`Plugin [${plugin.name}] already installed.`);\n\n      return;\n    }\n\n    if (typeof plugin.install !== 'function') {\n      this.logger.warn(`Plugin [${plugin.name}] has no \"install\" method.`);\n\n      return;\n    }\n\n    plugin.install(this, options);\n    installedPlugins.push(plugin);\n  }\n\n  /**\n   * ### Init barba with options.\n   *\n   * See [[IBarbaOptions]] for more details.\n   *\n   * Default values are:\n   *\n   * - transitions: `[]`\n   * - views: `[]`\n   * - schema: [[SchemaAttribute]]\n   * - timeout: `2e3`\n   * - cacheIgnore: `false`\n   * - prefetchIgnore: `false`\n   * - preventRunning: `false`\n   * - prevent: `null`,\n   * - debug: `false`\n   * - logLevel: `'debug'`\n   */\n  public init(\n    /** @ignore */ {\n      transitions = [],\n      views = [],\n      schema = schemaAttribute,\n      requestError,\n      timeout = 2e3,\n      cacheIgnore = false,\n      prefetchIgnore = false,\n      /* istanbul ignore next */\n      preventRunning = false,\n      prevent: preventCustom = null,\n      debug = false,\n      logLevel = 'off',\n    }: IBarbaOptions = {}\n  ) {\n    // 0. Set logger level and print version\n    Logger.setLevel(debug === true ? 'debug' : logLevel);\n    this.logger.info(this.version);\n\n    // 1. Manage options\n    Object.keys(schema).forEach(k => {\n      const attr = k as SchemaAttributeValues;\n\n      /* istanbul ignore else */\n      if (schemaAttribute[attr]) {\n        schemaAttribute[attr] = schema[attr];\n      }\n    });\n    this._requestCustomError = requestError;\n    this.timeout = timeout;\n    this.cacheIgnore = cacheIgnore;\n    this.prefetchIgnore = prefetchIgnore;\n    this.preventRunning = preventRunning;\n\n    // 2. Get and check wrapper\n    this._wrapper = this.dom.getWrapper();\n    if (!this._wrapper) {\n      throw new Error('[@barba/core] No Barba wrapper found');\n    }\n    this._wrapper.setAttribute('aria-live', 'polite'); // A11y\n\n    // 3. Init pages (get \"current\" data)\n    this._resetData();\n\n    const { current } = this.data;\n\n    if (!current.container) {\n      throw new Error('[@barba/core] No Barba container found');\n    }\n\n    // 4. Init other modules\n    this.cache = new Cache(cacheIgnore);\n    this.prevent = new Prevent(prefetchIgnore);\n    this.transitions = new Transitions(transitions);\n    this.views = new Views(views);\n\n    // Add prevent custom\n    if (preventCustom !== null) {\n      if (typeof preventCustom !== 'function') {\n        throw new Error('[@barba/core] Prevent should be a function');\n      }\n\n      this.prevent.add('preventCustom', preventCustom);\n    }\n\n    // 5. Use \"current\" data\n    // Init history\n    this.history.init(current.url.href, current.namespace);\n    // Add to cache\n    // TODO: do not cache renderer HTML, only request results…\n    // this.cache.set(current.url.href, Promise.resolve(current.html), 'init');\n\n    // 6. Bind context\n    this._onLinkEnter = this._onLinkEnter.bind(this);\n    this._onLinkClick = this._onLinkClick.bind(this);\n    this._onStateChange = this._onStateChange.bind(this);\n    this._bind();\n\n    // 7. Init plugins\n    this.plugins.forEach(plugin => plugin.init());\n\n    // 8. Barba ready\n    // Set next + trigger for once and `beforeEnter`/`afterEnter` view on page load.\n    const onceData = this.data;\n\n    onceData.trigger = 'barba';\n    onceData.next = onceData.current;\n    onceData.current = { ...this.schemaPage };\n    this.hooks.do('ready', onceData);\n\n    // 9. Finally, do once…\n    this.once(onceData);\n\n    // Clean data for first barba transition…\n    this._resetData();\n  }\n\n  public destroy(): void {\n    this._resetData();\n    this._unbind();\n    this.history.clear();\n    this.hooks.clear();\n    this.plugins = [];\n  }\n\n  get data(): ITransitionData {\n    return this._data;\n  }\n\n  get wrapper(): HTMLElement {\n    return this._wrapper;\n  }\n\n  /**\n   * ### Force a page change without Barba transition.\n   */\n  public force(href: string): void {\n    // DEV\n    // Can be used waiting animation cancellation management…\n    window.location.assign(href);\n  }\n\n  /**\n   * ### Go for a Barba transition.\n   *\n   * Manage \"self page\" href:\n   *\n   * - if same url and no self transition, keep default behavior\n   *   - link: reload the page\n   *   - anchor: scroll to\n   * - if same url with self transition, use it\n   * - then start a page transition.\n   */\n  public go(\n    href: string,\n    trigger: Trigger = 'barba',\n    e?: LinkEvent | PopStateEvent\n  ): Promise<void> {\n    // If animation running, force reload\n    if (this.transitions.isRunning) {\n      this.force(href);\n\n      return;\n    }\n\n    let self = false;\n\n    // Check prevent sameURL against current history\n    // + state check\n    // + update trigger with direction\n    if (trigger === 'popstate') {\n      self =\n        this.history.current &&\n        this.url.getPath(this.history.current.url) === this.url.getPath(href);\n    } else {\n      self = this.prevent.run('sameUrl', null, null, href);\n    }\n\n    if (self && !this.transitions.hasSelf) {\n      return;\n    }\n\n    trigger = this.history.change(href, trigger, e);\n\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    return this.page(href, trigger, self);\n  }\n\n  /**\n   * ### Start an \"once\" transition.\n   *\n   * If some registered \"once\" transition,\n   * get the \"resolved\" transition from the store and start it.\n   */\n  public async once(readyData: ITransitionData): Promise<void> {\n    await this.hooks.do('beforeEnter', readyData);\n\n    // Check if once transition\n    if (this.transitions.hasOnce) {\n      const transition = this.transitions.get(readyData, {\n        once: true,\n      }) as ITransitionOnce;\n\n      await this.transitions.doOnce({ transition, data: readyData });\n    }\n\n    await this.hooks.do('afterEnter', readyData);\n  }\n\n  /**\n   * ### Start a \"page\" transition.\n   *\n   * 1. If no running transition, updates data with full URL properties and trigger.\n   * 2. Get page from cache or init request.\n   * 3. Wait if some transitions need \"next\" data (`sync: true`, `to: …`).\n   * 4. Manage the history, depending on trigger.\n   * 5. Get \"data\" and trigger \"go\" hook.\n   * 6. Get the \"resolved\" transition from the store and start it.\n   * 7. Update title and reset data (current, next = undefined).\n   *\n   * > If \"self\", use the \"self\" transition\n   */\n  public async page(\n    href: string,\n    trigger: Trigger,\n    self: boolean\n  ): Promise<void> {\n    this.data.next.url = {\n      href,\n      ...this.url.parse(href),\n    };\n    this.data.trigger = trigger;\n\n    const page = this.cache.has(href)\n      ? this.cache.update(href, { action: 'click' }).request\n      : this.cache.set(\n          href,\n          this.request(\n            href,\n            this.timeout,\n            this.onRequestError.bind(this, trigger)\n          ),\n          'click'\n        ).request;\n\n    // Need to wait before getting the right transition\n    if (this.transitions.shouldWait) {\n      await helpers.update(page, this.data);\n    }\n\n    const data = this.data;\n\n    // Hook: between trigger and transition\n    // Can be used to resolve \"route\"…\n    await this.hooks.do('page', data);\n\n    try {\n      const transition = this.transitions.get(data, {\n        once: false,\n        self,\n      }) as ITransitionPage;\n\n      await this.transitions.doPage({\n        data,\n        page,\n        transition,\n        wrapper: this._wrapper,\n      });\n\n      this._resetData();\n    } catch (error) {\n      // Something went wrong (rejected promise, error, 404, 505, other…)\n      // TODO: manage / use cases for cancellation\n      // this.logger.debug('Transition cancelled');\n\n      // If transition error and no debug mode, force reload page.\n      /* istanbul ignore else */\n      if (Logger.getLevel() === 0) {\n        this.force(data.current.url.href);\n      }\n    }\n  }\n\n  /**\n   * When a request error occurs.\n   *\n   * Allow the user to manage request error. (E.g: 404)\n   */\n  public onRequestError(trigger: Trigger, ...args: any): boolean {\n    // Cancel transition status\n    this.transitions.isRunning = false;\n\n    const [href, response]: [string, RequestErrorOrResponse] = args;\n    const action = this.cache.getAction(href);\n    this.cache.delete(href);\n\n    // Custom requestError returning false will return here.\n    if (\n      this._requestCustomError &&\n      this._requestCustomError(trigger, action, href, response) === false\n    ) {\n      return false;\n    }\n\n    // Force page change\n    if (action === 'click') {\n      this.force(href);\n    }\n    return false;\n  }\n\n  /**\n   * Programmatically prefetch\n   */\n  public prefetch(href: string) {\n    // Already in cache\n    /* istanbul ignore next */\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, 'barba')\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'prefetch'\n    );\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _bind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.addEventListener('mouseover', this._onLinkEnter);\n      document.addEventListener('touchstart', this._onLinkEnter);\n    }\n    document.addEventListener('click', this._onLinkClick);\n    window.addEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _unbind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.removeEventListener('mouseover', this._onLinkEnter);\n      document.removeEventListener('touchstart', this._onLinkEnter);\n    }\n    document.removeEventListener('click', this._onLinkClick);\n    window.removeEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * When a element is entered.\n   *\n   * Get valid link element.\n   * Cache URL if needed.\n   */\n  private _onLinkEnter(e: LinkEvent): void {\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    const href = this.dom.getHref(link);\n\n    if (this.prevent.checkHref(href)) {\n      return;\n    }\n\n    // Already in cache\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, link)\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'enter'\n    );\n  }\n\n  /**\n   * When an element is clicked.\n   *\n   * Get valid link element.\n   * Prevent same URL.\n   * Go for a Barba transition.\n   */\n  private _onLinkClick(e: LinkEvent): void {\n    // This use `prevent.checkLink` under the hood to get eligible link.\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    if (this.transitions.isRunning && this.preventRunning) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      return;\n    }\n\n    this.go(this.dom.getHref(link), link, e);\n  }\n\n  /**\n   * When History state changes.\n   *\n   * Get \"href\" from URL\n   * Go for a Barba transition.\n   */\n  private _onStateChange(e: PopStateEvent): void {\n    this.go(this.url.getHref(), 'popstate', e);\n  }\n\n  /**\n   * Get a valid link ancestor.\n   *\n   * Check for a \"href\" attribute.\n   * Then check if eligible for Barba.\n   */\n  private _getLinkElement(e: LinkEvent): Link {\n    let el = e.target as Link;\n\n    while (el && !this.dom.getHref(el)) {\n      el = (el as HTMLElement).parentNode as Link;\n    }\n\n    // Check prevent\n    if (!el || this.prevent.checkLink(el, e, this.dom.getHref(el))) {\n      return;\n    }\n\n    return el;\n  }\n\n  /**\n   * Reset pages data.\n   *\n   * Set \"current\" and unset \"next\".\n   */\n  private _resetData() {\n    const href = this.url.getHref();\n    const current = {\n      container: this.dom.getContainer(),\n      html: this.dom.getHtml(),\n      namespace: this.dom.getNamespace(),\n      url: {\n        href,\n        ...this.url.parse(href),\n      },\n    };\n\n    this._data = {\n      current,\n      next: { ...this.schemaPage },\n      trigger: undefined,\n    };\n\n    this.hooks.do('reset', this.data);\n  }\n}\n\nconst core = new Core();\n\nexport default core;\n","// import '';\r\n// import 'projects.css';\r\nimport LocomotiveScroll from 'locomotive-scroll';\r\nimport imagesLoaded from 'imagesloaded';\r\nimport barba from '@barba/core';\r\nimport \"splitting/dist/splitting.css\";\r\nimport \"splitting/dist/splitting-cells.css\";\r\nimport Splitting from \"splitting\";\r\n// import Swup from 'swup';\r\n\r\n// const swup = new Swup();\r\n// function contentAnimation() {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconsole.clear();\r\n\r\nlet mousePos = { x: 0, y: 0 };\r\nlet mousePosCache = mousePos;\r\nlet direction = {\r\n\tx: mousePosCache.x - mousePos.x,\r\n\ty: mousePosCache.y - mousePos.y\r\n};\r\nlet cursors = [];\r\n\r\nclass App {\r\n\tconstructor() {\r\n\t\tpreloader(\".menu__item\").then(() => {\r\n\t\t\tSplitting();\r\n\t\t\tconst menuEl = document.querySelector(\".menu\");\r\n\t\t\tnew LocomotiveScroll({ el: menuEl, smooth: true });\r\n\t\t\tnew Menu(menuEl);\r\n\t\t\tcursors.push(\r\n\t\t\t\tnew Cursor(document.querySelector(\".cursor__small\"), 0),\r\n\t\t\t\tnew Cursor(document.querySelector(\".cursor__large\"), 0.4)\r\n\t\t\t);\r\n\t\t\twindow.addEventListener(\"mousemove\", (e) => {\r\n\t\t\t\tmousePos = getMousePos(e);\r\n\t\t\t\tcursors.forEach((cursor) => {\r\n\t\t\t\t\tcursor.update();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nclass Menu {\r\n\tconstructor(el) {\r\n\t\tthis.el = el;\r\n\t\tthis.menuItems = this.el.querySelectorAll(\".menu__item\");\r\n\r\n\t\tthis.animatableProperties = {\r\n\t\t\ttx: { previous: 0, current: 0, amt: 0.1 },\r\n\t\t\tty: { previous: 0, current: 0, amt: 0.1 },\r\n\t\t\trotation: { previous: 0, current: 0, amt: 0.08 },\r\n\t\t\tskewx: { previous: 0, current: 0, amt: 0.08 },\r\n\t\t\tbrightness: { previous: 1, current: 1, amt: 0.08 },\r\n\t\t\tsaturation: { previous: 0, current: 0, amt: 0.1 }\r\n\t\t};\r\n\r\n\t\tthis.menuItemInstances = [];\r\n\r\n\t\t[...this.menuItems].forEach((item, pos) =>\r\n\t\t\tthis.menuItemInstances.push(\r\n\t\t\t\tnew MenuItem(item, pos, this.animatableProperties)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tgsap.to(this.el, 0.1, { opacity: 1 });\r\n\r\n\t\tthis.showMenuItems();\r\n\t}\r\n\tshowMenuItems() {\r\n\t\tgsap.fromTo(\r\n\t\t\tthis.menuItemInstances.map((item) => item.DOM.innerText),\r\n\t\t\t{\r\n\t\t\t\trotation: (i) => (i % 2 == 0 ? 15 : -15)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tduration: 1.2,\r\n\t\t\t\tease: \"Expo.easeOut\",\r\n\t\t\t\ttransformOrigin: (i) => (i % 2 == 0 ? \"left bottom\" : \"right bottom\"),\r\n\t\t\t\ty: 0,\r\n\t\t\t\trotation: 0,\r\n\t\t\t\tdelay: (pos) => 0.15 + pos * 0.06\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass MenuItem {\r\n\tconstructor(el, menuItemIndex, animatableProps) {\r\n\t\tthis.DOM = { el };\r\n\t\tthis.DOM.innerText = this.DOM.el.querySelector(\".menu__item-innertext\");\r\n\t\tthis.menuItemIndex = menuItemIndex;\r\n\t\tthis.animatableProps = animatableProps;\r\n\t\tthis.imageURL = this.DOM.el.getAttribute(\"data-img\");\r\n\r\n\t\tthis.layout();\r\n\t\tthis.initEvents();\r\n\t}\r\n\tlayout() {\r\n\t\tthis.DOM.card = document.createElement(\"div\");\r\n\t\tthis.DOM.card.className = \"image-card\";\r\n\t\tthis.DOM.cardInner = document.createElement(\"div\");\r\n\t\tthis.DOM.cardInner.className = \"image-card__inner\";\r\n\t\tthis.DOM.cardImage = document.createElement(\"div\");\r\n\t\tthis.DOM.cardImage.className = \"image-card__img\";\r\n\t\tthis.DOM.cardImage.style.backgroundImage = `url(${this.imageURL})`;\r\n\r\n\t\tthis.DOM.cardInner.appendChild(this.DOM.cardImage);\r\n\t\tthis.DOM.card.appendChild(this.DOM.cardInner);\r\n\t\tthis.DOM.el.appendChild(this.DOM.card);\r\n\t}\r\n\tinitEvents() {\r\n\t\tconst onMouseEnter = () => {\r\n\t\t\tthis.showImage();\r\n\t\t\tthis.firstRAFCycle = true;\r\n\t\t\tthis.renderLoop();\r\n\t\t};\r\n\t\tconst onMouseLeave = () => {\r\n\t\t\tthis.stopRender();\r\n\t\t\tthis.hideImage();\r\n\t\t};\r\n\t\tthis.DOM.el.addEventListener(\"mouseenter\", onMouseEnter);\r\n\t\tthis.DOM.el.addEventListener(\"mouseleave\", onMouseLeave);\r\n\t}\r\n\tcalcBounds() {\r\n\t\tthis.bounds = {\r\n\t\t\tel: this.DOM.el.getBoundingClientRect(),\r\n\t\t\tcard: this.DOM.card.getBoundingClientRect(),\r\n\t\t\tcardImage: this.DOM.cardImage.getBoundingClientRect()\r\n\t\t};\r\n\t}\r\n\tshowImage() {\r\n\t\tgsap.killTweensOf(this.DOM.cardInner);\r\n\t\tgsap.killTweensOf(this.DOM.cardImage);\r\n\t\tgsap\r\n\t\t\t.timeline({\r\n\t\t\t\tonStart: () => {\r\n\t\t\t\t\tthis.DOM.el.style.zIndex = this.DOM.el.children.length;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.to(this.DOM.cardInner, {\r\n\t\t\t\tduration: 0.8,\r\n\t\t\t\tease: \"elastic.out(1, 0.75)\",\r\n\t\t\t\ttransformOrigin: `50% ${direction.y < 0 ? \"-20%\" : \"120%\"}`,\r\n\t\t\t\tstartAt: { rotation: `${direction.x < 0 ? \"+\" : \"-\"}25deg` },\r\n\t\t\t\trotation: 0\r\n\t\t\t})\r\n\t\t\t.to(\r\n\t\t\t\tthis.DOM.cardImage,\r\n\t\t\t\t{\r\n\t\t\t\t\tduration: 0.2,\r\n\t\t\t\t\tease: \"Sine.easeOut\",\r\n\t\t\t\t\tstartAt: { opacity: 0, scale: 0.6 },\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tscale: 1\r\n\t\t\t\t},\r\n\t\t\t\t0\r\n\t\t\t);\r\n\t}\r\n\thideImage() {\r\n\t\tgsap.killTweensOf(this.DOM.cardInner);\r\n\t\tgsap.killTweensOf(this.DOM.cardImage);\r\n\t\tgsap\r\n\t\t\t.timeline({\r\n\t\t\t\tonStart: () => {\r\n\t\t\t\t\tthis.DOM.el.style.zIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.to(this.DOM.cardInner, {\r\n\t\t\t\tduration: 0.8,\r\n\t\t\t\tease: \"elastic.out(1, 0.75)\",\r\n\t\t\t\ttransformOrigin: `50% ${direction.y < 0 ? \"-20%\" : \"120%\"}`,\r\n\t\t\t\trotation: `${direction.x < 0 ? \"+\" : \"-\"}25deg`\r\n\t\t\t})\r\n\t\t\t.to(\r\n\t\t\t\tthis.DOM.cardImage,\r\n\t\t\t\t{\r\n\t\t\t\t\tduration: 0.2,\r\n\t\t\t\t\tease: \"Sine.easeOut\",\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tscale: 0.6\r\n\t\t\t\t},\r\n\t\t\t\t0\r\n\t\t\t);\r\n\t}\r\n\trenderLoop() {\r\n\t\tif (!this.requestId) {\r\n\t\t\tthis.requestId = requestAnimationFrame(() => this.render());\r\n\t\t}\r\n\t}\r\n\tstopRender() {\r\n\t\tif (this.requestId) {\r\n\t\t\twindow.cancelAnimationFrame(this.requestId);\r\n\t\t\tthis.requestId = undefined;\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tthis.requestId = undefined;\r\n\t\tif (this.firstRAFCycle) {\r\n\t\t\tthis.calcBounds();\r\n\t\t}\r\n\r\n\t\tthis.updateAnimatableProps();\r\n\r\n\t\tdirection = {\r\n\t\t\tx: mousePosCache.x - mousePos.x,\r\n\t\t\ty: mousePosCache.y - mousePos.y\r\n\t\t};\r\n\t\tmousePosCache = mousePos;\r\n\r\n\t\tgsap.set(this.DOM.card, {\r\n\t\t\tx: this.animatableProps.tx.previous,\r\n\t\t\ty: this.animatableProps.ty.previous,\r\n\t\t\trotation: this.animatableProps.rotation.previous,\r\n\t\t\tskewX: this.animatableProps.skewx.previous,\r\n\t\t\tfilter: `brightness(${this.animatableProps.brightness.previous}) saturate(${this.animatableProps.saturation.previous})`\r\n\t\t});\r\n\r\n\t\tthis.firstRAFCycle = false;\r\n\t\tthis.renderLoop();\r\n\t}\r\n\r\n\tupdateAnimatableProps() {\r\n\t\tconst mouseDistanceX = clamp(Math.abs(mousePosCache.x - mousePos.x), 0, 100);\r\n\r\n\t\tthis.animatableProps.tx.current =\r\n\t\t\tMath.abs(mousePos.x - this.bounds.el.left) - this.bounds.card.width / 2;\r\n\t\tthis.animatableProps.ty.current =\r\n\t\t\tMath.abs(mousePos.y - this.bounds.el.top) - this.bounds.card.height / 2;\r\n\r\n\t\tthis.animatableProps.rotation.current = this.firstRAFCycle\r\n\t\t\t? 0\r\n\t\t\t: map(mouseDistanceX, 0, 100, 0, direction.x < 0 ? 30 : -30);\r\n\t\tthis.animatableProps.skewx.current = this.firstRAFCycle\r\n\t\t\t? 0\r\n\t\t\t: map(mouseDistanceX, 0, 100, 1, direction.x < 0 ? -60 : 60);\r\n\t\tthis.animatableProps.brightness.current = this.firstRAFCycle\r\n\t\t\t? 1\r\n\t\t\t: map(mouseDistanceX, 0, 100, 1, 10);\r\n\t\tthis.animatableProps.saturation.current = this.firstRAFCycle\r\n\t\t\t? 1\r\n\t\t\t: map(mouseDistanceX, 0, 100, 1, 8);\r\n\r\n\t\tfor (const key in this.animatableProps) {\r\n\t\t\tthis.animatableProps[key].previous = this.firstRAFCycle\r\n\t\t\t\t? this.animatableProps[key].current\r\n\t\t\t\t: lerp(\r\n\t\t\t\t\tthis.animatableProps[key].previous,\r\n\t\t\t\t\tthis.animatableProps[key].current,\r\n\t\t\t\t\tthis.animatableProps[key].amt\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nclass Cursor {\r\n\tconstructor(el, duration) {\r\n\t\tthis.el = el;\r\n\t\tthis.duration = duration;\r\n\t\tthis.el.style.opacity = 0;\r\n\t\tthis.bounds = this.el.getBoundingClientRect();\r\n\t}\r\n\tupdate() {\r\n\t\tgsap.to(this.el, {\r\n\t\t\tduration: this.duration,\r\n\t\t\topacity: 1,\r\n\t\t\tx: mousePos.x - this.bounds.width / 2,\r\n\t\t\ty: mousePos.y - this.bounds.height / 2\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// UTILITY FUNCTIONS\r\n\r\nfunction preloader(selector) {\r\n\treturn new Promise((resolve) => {\r\n\t\tconst imgwrap = document.createElement(\"div\");\r\n\t\timgwrap.style.visibility = \"hidden\";\r\n\t\tdocument.body.appendChild(imgwrap);\r\n\r\n\t\t[...document.querySelectorAll(selector)].forEach((el) => {\r\n\t\t\tconst imgEl = document.createElement(\"img\");\r\n\t\t\timgEl.style.width = 0;\r\n\t\t\timgEl.src = el.dataset.img;\r\n\t\t\timgEl.className = \"preload\";\r\n\t\t\timgwrap.appendChild(imgEl);\r\n\t\t});\r\n\r\n\t\timagesLoaded(document.querySelectorAll(\".preload\"), () => {\r\n\t\t\tgsap.to(\".loading__wrapper\", {\r\n\t\t\t\tduration: 0.8,\r\n\t\t\t\topacity: 0,\r\n\t\t\t\tpointerEvents: \"none\",\r\n\t\t\t\tonComplete: () => {\r\n\t\t\t\t\timgwrap.parentNode.removeChild(imgwrap);\r\n\t\t\t\t\tdocument.body.classList.remove(\"loading\");\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// Map number x from range [a, b] to [c, d]\r\nfunction map(x, a, b, c, d) {\r\n\treturn ((x - a) * (d - c)) / (b - a) + c;\r\n}\r\n\r\n// Linear interpolation\r\nfunction lerp(a, b, n) {\r\n\treturn (1 - n) * a + n * b;\r\n}\r\n\r\nfunction clamp(num, min, max) {\r\n\treturn num <= min ? min : num >= max ? max : num;\r\n}\r\n\r\n// Gets the mouse position\r\nfunction getMousePos(e) {\r\n\tlet posx = 0;\r\n\tlet posy = 0;\r\n\tif (!e) e = window.event;\r\n\tif (e.pageX || e.pageY) {\r\n\t\tposx = e.pageX;\r\n\t\tposy = e.pageY;\r\n\t} else if (e.clientX || e.clientY) {\r\n\t\tposx = e.clientX + body.scrollLeft + document.documentElement.scrollLeft;\r\n\t\tposy = e.clientY + body.scrollTop + document.documentElement.scrollTop;\r\n\t}\r\n\r\n\treturn { x: posx, y: posy };\r\n}\r\n\r\n// INITIALIZE THE APP\r\nconst app = new App();\r\n\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// function pageTransition() {\r\n\r\n// \tvar pgtrtl = gsap.timeline();\r\n\r\n// \tpgtrtl.to('ul.transition li', { duration: 0.5, scaleY: 1, transformOrigin: \"bottom left\", stagger: 0.2 })\r\n// \tpgtrtl.to('ul.transition li', { duration: 0.5, scaleY: 0, transformOrigin: \"bottom left\", stagger: 0.1, delay: 0.1 })\r\n// }\r\n\r\n// function delay(n) {\r\n// \tn = n || 2000;\r\n// \treturn new Promise(done => {\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tdone();\r\n\r\n// \t\t}, n);\r\n// \t});\r\n// }\r\n\r\n\r\n\r\n\r\n// barba.hooks.after(() => {\r\n// \tconst bottomDOM = document.getElementsByTagName(\"body\")[0]\r\n// \tconst newScript = document.createElement(\"script\")\r\n// \tconst oldScript = document.querySelector(\".main-script\")\r\n// \tnewScript.src = \"./main.js\"\r\n// \tnewScript.className = \"main-script\"\r\n// \toldScript.remove()\r\n// \tbottomDOM.appendChild(newScript)\r\n// \tconsole.log('appended home');\r\n// \t// data.current.container.remove()\r\n// });\r\n\r\n\r\n// barba.init({\r\n\r\n// \tsync: true,\r\n// \tpreventRunning: true,\r\n\r\n// \t// prefetchIgnore: '/home/',\r\n\r\n// \ttransitions: [{\r\n\r\n// \t\tasync leave(data) {\r\n\r\n// \t\t\tconst done = this.async();\r\n\r\n// \t\t\tpageTransition();\r\n// \t\t\tawait delay(1500);\r\n// \t\t\tdone();\r\n// \t\t\tconsole.log('leave');\r\n\r\n// \t\t},\r\n\r\n// \t\tasync enter(data) {\r\n// \t\t\tcontentAnimation();\r\n// \t\t\tconsole.log('enter');\r\n// \t\t},\r\n\r\n// \t\tasync once(data) {\r\n// \t\t\tcontentAnimation();\r\n// \t\t\tconsole.log('once');\r\n// \t\t},\r\n\r\n\r\n\r\n// \t}]\r\n\r\n\r\n\r\n\r\n// });\r\n\r\n\r\n"],"names":["t","n","$e263ca4e56c847da$exports","t1","r","length","e","enumerable","configurable","writable","Object","defineProperty","key","n1","prototype","r1","assign","arguments","hasOwnProperty","call","apply","this","e1","create","constructor","__proto__","i1","t2","setPrototypeOf","getPrototypeOf","o1","t3","n2","u1","t4","n3","r2","Reflect","construct","sham","Proxy","Date","toString","push","i","Function","bind","f1","t5","Map","indexOf","TypeError","has","get","set","value","_catch","body","recover","result","then","LogLevels","Symbol","iterator","asyncIterator","_level","off","Logger","t7","source","_source","getLevel","setLevel","name","error","objects","_log","console","warn","warning","info","debug","log","fn","level","concat","pathToRegexp","regexpToFunction","parse","tokensToFunction","tokensToRegExp","PATH_REGEXP","RegExp","join","str","options","res","tokens","index","path","defaultDelimiter","delimiter","whitelist","pathEscaped","exec","m","escaped","offset","slice","prev","capture","group","modifier","k","c","pattern","prefix","optional","repeat","escapeGroup","escapeString","substr","re","keys","pathname","params","decode","decodeURIComponent","split","map","matches","Array","flags","data","encode","encodeURIComponent","validate","token","segment","isArray","j","test","String","replace","sensitive","strict","start","end","endsWith","route","endToken","isEndDelimited","groups","match","parts","schemaAttribute","container","history","namespace","prevent","wrapper","dom","t10","DOMParser","n7","el","outerHTML","toDocument","htmlString","_parser","parseFromString","toElement","div","document","createElement","innerHTML","getHtml","doc","documentElement","getWrapper","scope","querySelector","_attr","getContainer","removeContainer","contains","parentNode","removeChild","addContainer","existingContainer","_insertAfter","appendChild","getNamespace","ns","getAttribute","getHref","tagName","toLowerCase","href","resolveUrl","baseVal","urls","numUrls","Error","base","head","getElementsByTagName","insertBefore","firstChild","resolved","a","newNode","referenceNode","nextSibling","t11","e3","init","url","_session","state","scroll","x","window","scrollX","y","scrollY","_states","_pointer","item","from","states","replaceState","change","trigger","_getDirection","add","size","action","_getAction","pushState","update","remove","splice","pop","clear","newStates","attr","hasAttribute","diff","Math","abs","page","next","html","nextDocument","title","Promise","reject","ptr","resolve","requestAnimationFrame","getOrigin","location","origin","getPort","port","portString","substring","parseInt","hash","query","hashIndex","queryIndex","parseQuery","reduce","acc","clean","H","request","ttl","requestError","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","responseText","statusText","ontimeout","err","onerror","open","timeout","setRequestHeader","send","C","obj","runAsync","func","ctx","r5","args","async","promise","answer","isPromise","hooks","t15","n10","_this","r6","registered","all","forEach","hook","_this2","Set","chain","_this3","logger","_this4","help","HookMethods","Ignore","t17","ignore","_ignoreAll","paths","_ignoreRegexes","p","checkHref","some","regex","Cache","n11","_state","getRequest","getAction","exists","newTab","event","which","metaKey","ctrlKey","shiftKey","altKey","blank","target","corsDomain","protocol","hostname","corsPort","download","preventSelf","preventAll","Boolean","closest","sameUrl","Prevent","n12","r8","check","suite","tests","run","checkLink","BarbaError","label","o","captureStackTrace","t22","Store","t23","transitions","type","n13","_rules","position","filters","once","filter","self","matching","active","find","valid","reverse","rule","_check","to","activeMatch","transitionType","s","infos","t25","_addPriority","sort","b","priority","leave","enter","transition","direction","isValid","hasMatch","strRule","objRule","fnName","current","names","_calculatePriority","ruleName","ruleIndex","pow","Transitions","t26","store","r9","doOnce","_running","u","s1","_doAsyncHook","doPage","u4","f","sync","h","t29","_isTransitionError","r13","leaveResult","helpers","values","o4","r12","r11","t31","t32","t33","t34","t35","message","t36","Views","t37","views","view","byNamespace","_createHook","Element","msMatchesSelector","webkitMatchesSelector","parentElement","nodeType","schemaPage","t39","e6","use","plugin","installedPlugins","plugins","install","t40","schema","v","cacheIgnore","prefetchIgnore","preventRunning","preventCustom","g","logLevel","E","version","_requestCustomError","_wrapper","setAttribute","_resetData","cache","_onLinkEnter","_onLinkClick","_onStateChange","_bind","onceData","destroy","_unbind","force","go","isRunning","getPath","hasSelf","stopPropagation","preventDefault","readyData","hasOnce","t41","onRequestError","shouldWait","response","prefetch","catch","_this5","addEventListener","removeEventListener","link","_getLinkElement","_this6","_data","define","amd","barba","$9240a2c8622f6211$var$mousePos","$9240a2c8622f6211$var$mousePosCache","$9240a2c8622f6211$var$direction","$9240a2c8622f6211$var$cursors","$9240a2c8622f6211$var$Menu","el3","menuItems","querySelectorAll","animatableProperties","tx","previous","amt","ty","rotation","skewx","brightness","saturation","menuItemInstances","pos","$9240a2c8622f6211$var$MenuItem","gsap","opacity","showMenuItems","fromTo","DOM","innerText","duration","ease","transformOrigin","delay","el1","menuItemIndex","animatableProps","imageURL","layout","initEvents","card","className","cardInner","cardImage","style","backgroundImage","showImage","firstRAFCycle","renderLoop","stopRender","hideImage","calcBounds","bounds","getBoundingClientRect","killTweensOf","timeline","onStart","zIndex","children","startAt","scale","requestId","render","cancelAnimationFrame","undefined","updateAnimatableProps","skewX","mouseDistanceX","num","max","min","left","width","top","height","$9240a2c8622f6211$var$map","$9240a2c8622f6211$var$lerp","$9240a2c8622f6211$var$Cursor","el2","d","selector","imgwrap","visibility","imgEl","src","dataset","img","$parcel$interopDefault","$fapoc","pointerEvents","onComplete","classList","$iM8FG","menuEl","$jc9BL","default","smooth","posx","posy","pageX","pageY","clientX","clientY","scrollLeft","scrollTop","$9240a2c8622f6211$var$getMousePos","cursor"],"version":3,"file":"project.fe93b76a.js.map"}