const e={ww:window.innerWidth,wh:window.innerHeight,isDevice:navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i)};const t=new THREE.TextureLoader;t.crossOrigin="Access-Control-Allow-Origin";class i extends THREE.Object3D{init(e){this.el=e,this.resize()}resize(){this.rect=this.el.getBoundingClientRect();const{left:t,top:i,width:n,height:s}=this.rect;this.pos={x:t+n/2-e.ww/2,y:i+s/2-e.wh/2},this.position.y=this.pos.y,this.position.x=this.pos.x,this.updateX()}updateX(e){e&&(this.position.x=e+this.pos.x)}}const n=new THREE.PlaneBufferGeometry(1,1,32,32),s=new THREE.ShaderMaterial({transparent:!0,fragmentShader:"\n  precision mediump float;\n  \n  \n  vec2 backgroundCoverUv(vec2 screenSize, vec2 imageSize, vec2 uv) {\n    float screenRatio = screenSize.x / screenSize.y;\n    float imageRatio = imageSize.x / imageSize.y;\n  \n    vec2 newSize = screenRatio < imageRatio \n        ? vec2(imageSize.x * screenSize.y / imageSize.y, screenSize.y)\n        : vec2(screenSize.x, imageSize.y * screenSize.x / imageSize.x);\n  \n    vec2 newOffset = (screenRatio < imageRatio \n        ? vec2((newSize.x - screenSize.x) / 2.0, 0.0) \n        : vec2(0.0, (newSize.y - screenSize.y) / 2.0)) / newSize;\n  \n    return uv * screenSize / newSize + newOffset;\n  }\n  \n  \n  uniform sampler2D uTexture;\n  \n  uniform vec2 uMeshSize;\n  uniform vec2 uImageSize;\n  \n  uniform float uVelo;\n  uniform float uScale;\n  \n  varying vec2 vUv;\n  \n  void main() {\n    vec2 uv = vUv;\n  \n    vec2 texCenter = vec2(0.5);\n    vec2 texUv = backgroundCoverUv(uMeshSize, uImageSize, uv);\n    vec2 texScale = (texUv - texCenter) * uScale + texCenter;\n    vec4 texture = texture2D(uTexture, texScale);\n  \n    texScale.x += 0.15 * uVelo;\n    if(uv.x < 1.) texture.g = texture2D(uTexture, texScale).g;\n  \n    texScale.x += 0.10 * uVelo;\n    if(uv.x < 1.) texture.b = texture2D(uTexture, texScale).b;\n  \n    gl_FragColor = texture;\n  }\n  ",vertexShader:"\n  precision mediump float;\n  \n  uniform float uVelo;\n  \n  varying vec2 vUv;\n  \n  #define M_PI 3.1415926535897932384626433832795\n  \n  void main(){\n    vec3 pos = position;\n    pos.x = pos.x + ((sin(uv.y * M_PI) * uVelo) * 0.125);\n  \n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n  }\n  "});class r extends i{init(e){super.init(e),this.geo=n,this.mat=s.clone(),this.mat.uniforms={uTime:{value:0},uTexture:{value:0},uMeshSize:{value:new THREE.Vector2(this.rect.width,this.rect.height)},uImageSize:{value:new THREE.Vector2(0,0)},uScale:{value:.75},uVelo:{value:0}},this.img=this.el.querySelector("img"),this.texture=t.load(this.img.src,(e=>{e.minFilter=THREE.LinearFilter,e.generateMipmaps=!1,this.mat.uniforms.uTexture.value=e,this.mat.uniforms.uImageSize.value=[this.img.naturalWidth,this.img.naturalHeight]})),this.mesh=new THREE.Mesh(this.geo,this.mat),this.mesh.scale.set(this.rect.width,this.rect.height,1),this.add(this.mesh),o.scene.add(this)}}const o=new class{constructor(){this.scene=new THREE.Scene,this.camera=new THREE.OrthographicCamera(e.ww/-2,e.ww/2,e.wh/2,e.wh/-2,1,10),this.camera.lookAt(this.scene.position),this.camera.position.z=1,this.renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0}),this.renderer.setPixelRatio(1.5),this.renderer.setSize(e.ww,e.wh),this.renderer.setClearColor(16777215,0),this.init()}render(){this.renderer.render(this.scene,this.camera)}init(){const e=this.renderer.domElement;e.classList.add("dom-gl"),document.body.appendChild(e)}},a=new class{constructor(t,i={}){this.bindAll(),this.el=t,this.opts=Object.assign({speed:2,threshold:50,ease:.075},i),this.ui={items:this.el.querySelectorAll(".js-slide"),titles:document.querySelectorAll(".js-title"),lines:document.querySelectorAll(".js-progress-line")},this.state={target:0,current:0,currentRounded:0,y:0,on:{x:0,y:0},off:0,progress:0,diff:0,max:0,min:0,snap:{points:[]},flags:{dragging:!1}},this.items=[],this.events={move:e.isDevice?"touchmove":"mousemove",up:e.isDevice?"touchend":"mouseup",down:e.isDevice?"touchstart":"mousedown"},this.init()}bindAll(){["onDown","onMove","onUp"].forEach((e=>this[e]=this[e].bind(this)))}init(){return gsap.utils.pipe(this.setup(),this.on())}destroy(){this.off(),this.state=null,this.items=null,this.opts=null,this.ui=null}on(){const{move:e,up:t,down:i}=this.events;window.addEventListener(i,this.onDown),window.addEventListener(e,this.onMove),window.addEventListener(t,this.onUp)}off(){const{move:e,up:t,down:i}=this.events;window.removeEventListener(i,this.onDown),window.removeEventListener(e,this.onMove),window.removeEventListener(t,this.onUp)}setup(){const{ww:t}=e,i=this.state,{items:n,titles:s}=this.ui,{width:o,left:a}=this.el.getBoundingClientRect();i.max=-(n[n.length-1].getBoundingClientRect().right-o-a),i.min=0,this.tl=gsap.timeline({paused:!0,defaults:{duration:1,ease:"linear"}}).fromTo(".js-progress-line-2",{scaleX:1},{scaleX:0,duration:.5,ease:"power3"},0).fromTo(".js-titles",{yPercent:0},{yPercent:-(100-100/s.length)},0).fromTo(".js-progress-line",{scaleX:0},{scaleX:1},0);for(let e=0;e<n.length;e++){const s=n[e],{left:a,right:l,width:h}=s.getBoundingClientRect(),c=new r;c.init(s);const u=gsap.timeline({paused:!0}).fromTo(c.mat.uniforms.uScale,{value:.65},{value:1,duration:1,ease:"linear"});this.items.push({el:s,plane:c,left:a,right:l,width:h,min:a<t?.775*t:-(.225*t-.2*o),max:a>t?i.max-.775*t:i.max+(.225*t-.2*o),tl:u,out:!1})}}calc(){const e=this.state;e.current+=(e.target-e.current)*this.opts.ease,e.currentRounded=Math.round(100*e.current)/100,e.diff=5e-4*(e.target-e.current),e.progress=gsap.utils.wrap(0,1,e.currentRounded/e.max),this.tl&&this.tl.progress(e.progress)}render(){this.calc(),this.transformItems()}transformItems(){const{flags:e}=this.state;for(let t=0;t<this.items.length;t++){const i=this.items[t],{translate:n,isVisible:s,progress:r}=this.isVisible(i);i.plane.updateX(n),i.plane.mat.uniforms.uVelo.value=this.state.diff,!i.out&&i.tl&&i.tl.progress(r),s||e.resize?i.out=!1:i.out||(i.out=!0)}}isVisible({left:t,right:i,width:n,min:s,max:r}){const{ww:o}=e,{currentRounded:a}=this.state,l=gsap.utils.wrap(s,r,a);console.log(l);const h=this.opts.threshold;return{translate:l,isVisible:t+l<h+o&&i+l>-h,progress:gsap.utils.clamp(0,1,1-(l+t+n)/(o+n))}}clampTarget(){const e=this.state;e.target=gsap.utils.clamp(e.max,0,e.target)}getPos({changedTouches:e,clientX:t,clientY:i,target:n}){return{x:e?e[0].clientX:t,y:e?e[0].clientY:i,target:n}}onDown(e){const{x:t,y:i}=this.getPos(e),{flags:n,on:s}=this.state;n.dragging=!0,s.x=t,s.y=i}onUp(){const e=this.state;e.flags.dragging=!1,e.off=e.target}onMove(e){const{x:t,y:i}=this.getPos(e),n=this.state;if(!n.flags.dragging)return;const{off:s,on:r}=n,o=t-r.x,a=i-r.y;Math.abs(o)>Math.abs(a)&&e.cancelable&&(e.preventDefault(),e.stopPropagation()),n.target=s+o*this.opts.speed}}(document.querySelector(".js-slider"));gsap.ticker.add((()=>{o.render(),a.render()}));
//# sourceMappingURL=projects.71535997.js.map
